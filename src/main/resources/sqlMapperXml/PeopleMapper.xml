<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangzhixuan.mapper.PeopleMapper">
    <resultMap id="BaseResultMap" type="com.wangzhixuan.model.People">
        <id     column="id"             property="id" jdbcType="INTEGER"/>
        <result column="code"           property="code" jdbcType="VARCHAR" />
        <result column="name"           property="name" jdbcType="VARCHAR"/>
        <result column="sex"            property="sex" jdbcType="TINYINT"/>
        <result column="national_id"    property="nationalId" jdbcType="INTEGER"/>
        <result column="birthday"       property="birthday" jdbcType="DATE" />
        <result column="native_id"      property="nativeId" jdbcType="INTEGER"/>
        <result column="education_name" property="educationName" jdbcType="VARCHAR"/>
        <result column="degree_id"      property="degreeId" jdbcType="VARCHAR"/>
        <result column="political_name" property="politicalName" jdbcType="VARCHAR"/>
        <result column="party_date"     property="partyDate" jdbcType="DATE"/>
        <result column="work_date"      property="workDate"  jdbcType="DATE"/>
        <result column="school_date"    property="schoolDate" jdbcType="DATE"/>
        <result column="job_name"       property="jobName"  jdbcType="VARCHAR"/>
        <result column="job_category"   property="jobCategory" jdbcType="VARCHAR"/>
        <result column="job_id"         property="jobId"       jdbcType="INTEGER"/>
        <result column="job_date"       property="jobDate"  jdbcType="DATE"/>
        <result column="job_level_date" property="jobLevelDate" jdbcType="DATE"/>
        <result column="age"            property="age"  jdbcType="INTEGER"/>
        <result column="virtual_age"    property="virtualAge" jdbcType="INTEGER"/>
        <result column="work_age"       property="workAge"  jdbcType="INTEGER"/>
        <result column="formation"      property="formation"  jdbcType="VARCHAR"/>
        <result column="mobile"         property="mobile" jdbcType="VARCHAR"/>
        <result column="marriage_id"    property="marriageId" jdbcType="INTEGER" />
        <result column="photo_id"       property="photoId"  jdbcType="VARCHAR" />
        <result column="address"        property="address" jdbcType="VARCHAR"/>
        <result column="hukou"          property="hukou"   jdbcType="VARCHAR"/>
        <result column="hukou_address"  property="hukouAddress"  jdbcType="VARCHAR"/>
        <result column="final_education_name" property="finalEducationName" jdbcType="VARCHAR"/>
        <result column="major"          property="major" jdbcType="VARCHAR"/>
        <result column="graduate_school" property="graduateSchool" jdbcType="VARCHAR"/>
        <result column="contact"        property="contact" jdbcType="VARCHAR"/>
        <result column="relationship"   property="relationship" jdbcType="VARCHAR"/>
        <result column="contact_number" property="contactNumber" jdbcType="VARCHAR"/>
        <result column="family_info_1"  property="familyInfo1" jdbcType="VARCHAR"/>
        <result column="family_info_2"  property="familyInfo2"  jdbcType="VARCHAR"/>
        <result column="family_info_3"  property="familyInfo3"  jdbcType="VARCHAR"/>
        <result column="family_info_4"  property="familyInfo4"  jdbcType="VARCHAR"/>
        <result column="photo"          property="photo" jdbcType="VARCHAR" />
        <result column="identity_id"    property="identityId"   jdbcType="INTEGER"/>
        <result column="status"         property="status"       jdbcType="INTEGER"/>
    </resultMap>

    <resultMap id="peopleVoResultMap" type="com.wangzhixuan.vo.PeopleVo">
        <id     column="id"             property="id"           jdbcType="INTEGER"/>
        <result column="code"           property="code"         jdbcType="VARCHAR"/>
        <result column="name"           property="name"         jdbcType="VARCHAR"/>
        <result column="sex"            property="sex"          jdbcType="TINYINT" />
        <result column="national_id"    property="nationalId"   jdbcType="INTEGER"/>
        <result column="national_name"  property="nationalName" jdbcType="VARCHAR"/>
        <result column="birthday"       property="birthday"     jdbcType="DATE" />
        <result column="native_id"      property="nativeId"     jdbcType="INTEGER"/>
        <result column="native_name"    property="nativeName"   jdbcType="VARCHAR"/>
        <result column="education_name" property="educationName"    jdbcType="VARCHAR"/>
        <result column="degree_id"      property="degreeId"     jdbcType="INTEGER"/>
        <result column="degree_name"    property="degreeName"   jdbcType="VARCHAR"/>
        <result column="political_name" property="politicalName"    jdbcType="VARCHAR"/>
        <result column="party_date"     property="partyDate"    jdbcType="DATE"/>
        <result column="work_date"      property="workDate"     jdbcType="DATE"/>
        <result column="school_date"    property="schoolDate"   jdbcType="DATE"/>
        <result column="job_name"       property="jobName"      jdbcType="VARCHAR"/>
        <result column="job_category"   property="jobCategory"  jdbcType="VARCHAR"/>
        <result column="job_id"         property="jobId"        jdbcType="INTEGER"/>
        <result column="job_level_name" property="jobLevelName" jdbcType="VARCHAR"/>
        <result column="job_date"       property="jobDate"      jdbcType="DATE"/>
        <result column="job_level_date" property="jobLevelDate" jdbcType="DATE"/>
        <result column="age"            property="age"          jdbcType="INTEGER"/>
        <result column="virtual_age"    property="virtualAge"   jdbcType="INTEGER"/>
        <result column="work_age"       property="workAge"      jdbcType="INTEGER"/>
        <result column="formation"      property="formation"    jdbcType="VARCHAR"/>
        <result column="mobile"         property="mobile"       jdbcType="VARCHAR"/>
        <result column="marriage_id"    property="marriageId"   jdbcType="INTEGER"/>
        <result column="marriage_name"  property="marriageName" jdbcType="VARCHAR"/>
        <result column="photo_id"       property="photoId"      jdbcType="VARCHAR"/>
        <result column="address"        property="address"      jdbcType="VARCHAR"/>
        <result column="hukou"          property="hukou"        jdbcType="VARCHAR"/>
        <result column="hukou_address"  property="hukouAddress" jdbcType="VARCHAR"/>
        <result column="final_education_name" property="finalEducationName" jdbcType="VARCHAR"/>
        <result column="major"          property="major"        jdbcType="VARCHAR"/>
        <result column="graduate_school" property="graduateSchool" jdbcType="VARCHAR"/>
        <result column="contact"        property="contact"      jdbcType="VARCHAR"/>
        <result column="relationship"   property="relationship" jdbcType="VARCHAR"/>
        <result column="contact_number" property="contactNumber" jdbcType="VARCHAR"/>
        <result column="family_info_1"  property="familyInfo1"  jdbcType="VARCHAR"/>
        <result column="family_info_1_title" property="familyInfo1Title" jdbcType="VARCHAR"/>
        <result column="family_info_1_name"  property="familyInfo1Name"  jdbcType="VARCHAR"/>
        <result column="family_info_1_work_address" property="familyInfo1WorkAddress" jdbcType="VARCHAR"/>
        <result column="family_info_1_job"  property="familyInfo1Job"   jdbcType="VARCHAR"/>
        <result column="family_info_1_contact" property="familyInfo1Contact" jdbcType="VARCHAR"/>
        <result column="family_info_2"  property="familyInfo2"  jdbcType="VARCHAR"/>
        <result column="family_info_2_title" property="familyInfo2Title" jdbcType="VARCHAR"/>
        <result column="family_info_2_name"  property="familyInfo2Name"  jdbcType="VARCHAR"/>
        <result column="family_info_2_work_address" property="familyInfo2WorkAddress" jdbcType="VARCHAR"/>
        <result column="family_info_2_job"  property="familyInfo2Job"   jdbcType="VARCHAR"/>
        <result column="family_info_2_contact" property="familyInfo2Contact" jdbcType="VARCHAR"/>
        <result column="family_info_3"  property="familyInfo3"  jdbcType="VARCHAR"/>
        <result column="family_info_3_title" property="familyInfo3Title" jdbcType="VARCHAR"/>
        <result column="family_info_3_name"  property="familyInfo3Name"  jdbcType="VARCHAR"/>
        <result column="family_info_3_work_address" property="familyInfo3WorkAddress" jdbcType="VARCHAR"/>
        <result column="family_info_3_job"  property="familyInfo3Job"   jdbcType="VARCHAR"/>
        <result column="family_info_3_contact" property="familyInfo3Contact" jdbcType="VARCHAR"/>
        <result column="family_info_4"  property="familyInfo4"  jdbcType="VARCHAR"/>
        <result column="family_info_4_title" property="familyInfo4Title" jdbcType="VARCHAR"/>
        <result column="family_info_4_name"  property="familyInfo4Name"  jdbcType="VARCHAR"/>
        <result column="family_info_4_work_address" property="familyInfo4WorkAddress" jdbcType="VARCHAR"/>
        <result column="family_info_4_job"  property="familyInfo4Job"   jdbcType="VARCHAR"/>
        <result column="family_info_4_contact" property="familyInfo4Contact" jdbcType="VARCHAR"/>
        <result column="photo"  property="photo" jdbcType="VARCHAR" />
        <result column="identity_id" property="identityId" jdbcType="INTEGER"/>
        <result column="identity_name" property="identityName" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, code, name, sex, national_id, birthday, native_id, education_name, degree_id, political_name,
        party_date, work_date, school_date, job_name, job_category, job_id, job_date, job_level_date,
        age, virtual_age, work_age, formation, mobile, marriage_id, photo_id, address, hukou, hukou_address,
        final_education_name, major, graduate_school, contact, relationship, contact_number, family_info_1,
        family_info_2, family_info_3, family_info_4, photo, identity_id, status
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from people_total
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findAllPeople" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from people_total
        where status = 0
    </select>

    <select id="findPeopleVoById" resultMap="peopleVoResultMap" parameterType="java.lang.Integer">
        SELECT
          t.id,
          t.code,
          t.name,
          t.sex,
          t.national_id,
          n.name as national_name,
          t.birthday,
          t.native_id,
          na.name as native_name,
          t.education_name,
          t.degree_id,
          de.name as degree_name,
          t.political_name,
          t.party_date,
          t.work_date,
          t.school_date,
          t.job_name,
          t.job_category,
          t.job_id,
          j.job_level as job_level_name,
          t.job_date,
          t.job_level_date,
          t.age,
          t.virtual_age,
          t.work_age,
          t.formation,
          t.mobile,
          t.marriage_id,
          m.name as marriage_name,
          t.photo_id,
          t.address,
          t.hukou,
          t.hukou_address,
          t.final_education_name,
          t.major,
          t.graduate_school,
          t.contact,
          t.relationship,
          t.contact_number,
          t.family_info_1,
          t.family_info_2,
          t.family_info_3,
          t.family_info_4,
          t.photo,
          t.identity_id,
          i.name as identity_name,
          t.status
        FROM
          people_total t
        LEFT JOIN
          dict_national n ON n.id = t.national_id
        LEFT JOIN
          dict_native na ON na.id = t.native_id
        LEFT JOIN
          dict_degree de ON de.id = t.degree_id
        LEFT JOIN
          job j ON j.id = t.job_id
        LEFT JOIN
          dict_marriage m ON m.id = t.marriage_id
        LEFT JOIN
          dict_identity i ON i.id = t.identity_id
        <where>
            t.id = #{id}
        </where>
    </select>

    <select id="findPeopleById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from people_total
        where id = #{id}
    </select>

    <select id="findPeopleByCode" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM people_total
        WHERE code = #{code, jdbcType=VARCHAR}
    </select>

    <select id="findPeopleByName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from people_total
        where name LIKE concat('%',#{name},'%') and status = 0
    </select>

    <select id="findFirstPeopleByName" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List" />
        from people_total
        where name = #{name, jdbcType=VARCHAR}
        LIMIT 0,1
    </select>

    <select id="findPeoplePageCondition" resultMap="peopleVoResultMap" parameterType="PageInfo">
        SELECT
            t.id,
            t.code,
            t.name,
            t.sex,
            t.national_id,
            n.name as national_name,
            t.birthday,
            t.native_id,
            na.name as native_name,
            t.education_name,
            t.degree_id,
            de.name as degree_name,
            t.political_name,
            t.party_date,
            t.work_date,
            t.school_date,
            t.job_name,
            t.job_category,
            t.job_id,
            j.job_level as job_level_name,
            t.job_date,
            t.job_level_date,
            t.age,
            t.virtual_age,
            t.work_age,
            t.formation,
            t.mobile,
            t.marriage_id,
            m.name as marriage_name,
            t.photo_id,
            t.address,
            t.hukou,
            t.hukou_address,
            t.final_education_name,
            t.major,
            t.graduate_school,
            t.contact,
            t.relationship,
            t.contact_number,
            t.family_info_1,
            t.family_info_2,
            t.family_info_3,
            t.family_info_4,
            t.photo,
            t.identity_id,
            i.name as identity_name,
            t.status
        FROM
          people_total t
        LEFT JOIN
          dict_national n ON n.id = t.national_id
        LEFT JOIN
          dict_native na ON na.id = t.native_id
        LEFT JOIN
          dict_degree de ON de.id = t.degree_id
        LEFT JOIN
          job j ON j.id = t.job_id
        LEFT JOIN
          dict_marriage m ON m.id = t.marriage_id
        LEFT JOIN
          dict_identity i ON i.id = t.identity_id
        <where>
            <if test=" condition.name != null and condition.name != '' ">
                and t.name LIKE concat('%',#{condition.name},'%')
            </if>
            <if test=" condition.sex != null">
                and t.sex = #{condition.sex}
            </if>
            <if test=" condition.codeList != null">
                and t.code in
                <foreach item="item" index="index" collection="condition.codeList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.nationalIdList != null">
                and t.national_id in
                <foreach item="item" index="index" collection="condition.nationalIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.nativeIdList != null">
                and t.native_id in
                <foreach item="item" index="index" collection="condition.nativeIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.birthdayMin != null and condition.birthdayMin != ''">
                <![CDATA[ and t.birthday >= #{condition.birthdayMin} ]]>
            </if>
            <if test=" condition.birthdayMax != null and condition.birthdayMax != ''">
                <![CDATA[ and t.birthday <= #{condition.birthdayMax} ]]>
            </if>
            <if test=" condition.politicalName != null and condition.politicalName != ''">
                and t.political_name LIKE concat('%',#{condition.politicalName},'%')
            </if>
            <if test=" condition.educationName != null and condition.educationName != ''">
                and t.education_name LIKE concat('%',#{condition.educationName},'%')
            </if>
            <if test=" condition.degreeIdList != null ">
                and t.degree_id in
                <foreach item="item" index="index" collection="condition.degreeIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.partyDateMin != null and condition.partyDateMin != ''">
                <![CDATA[ and t.party_date >= #{condition.partyDateMin} ]]>
            </if>
            <if test=" condition.partyDateMax != null and condition.partyDateMax != ''">
                <![CDATA[ and t.party_date <= #{condition.partyDateMax} ]]>
            </if>
            <if test=" condition.workDateMin != null and condition.workDateMin != ''">
                <![CDATA[ and t.work_date >= #{condition.workDateMin} ]]>
            </if>
            <if test=" condition.workDateMax != null and condition.workDateMax != ''">
                <![CDATA[ and t.work_date <= #{condition.workDateMax} ]]>
            </if>
            <if test=" condition.schoolDateMin != null and condition.schoolDateMin != ''">
                <![CDATA[ and t.school_date >= #{condition.schoolDateMin} ]]>
            </if>
            <if test=" condition.schoolDateMax != null and condition.schoolDateMax != ''">
                <![CDATA[ and t.school_date <= #{condition.schoolDateMax} ]]>
            </if>
            <if test=" condition.jobName != null and condition.jobName != ''">
                and t.job_name LIKE concat('%',#{condition.jobName},'%')
            </if>
            <if test=" condition.jobCategoryList != null">
                and t.job_category in
                <foreach item="item" index="index" collection="condition.jobCategoryList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.jobIdList != null">
                and t.job_id in
                <foreach item="item" index="index" collection="condition.jobIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.jobDateMin != null and condition.jobDateMin != ''">
                <![CDATA[ and t.job_date >= #{condition.jobDateMin} ]]>
            </if>
            <if test=" condition.jobDateMax != null and condition.jobDateMax != ''">
                <![CDATA[ and t.job_date <= #{condition.jobDateMax} ]]>
            </if>
            <if test=" condition.jobLevelDateMin != null and condition.jobLevelDateMin != ''">
                <![CDATA[ and t.job_level_date >= #{condition.jobLevelDateMin} ]]>
            </if>
            <if test=" condition.jobLevelDateMax != null and condition.jobLevelDateMax != ''">
                <![CDATA[ and t.job_level_date <= #{condition.jobLevelDateMax} ]]>
            </if>
            <if test=" condition.status != null">
                and t.status = 0
            </if>
        </where>
        LIMIT #{from}, #{size}
    </select>

    <select id="findPeoplePageCount" resultType="java.lang.Integer" parameterType="PageInfo">
        select count(t.id) count
        FROM
          people_total t
        LEFT JOIN
        dict_national n ON n.id = t.national_id
        LEFT JOIN
        dict_native na ON na.id = t.native_id
        LEFT JOIN
        dict_degree de ON de.id = t.degree_id
        LEFT JOIN
        job j ON j.id = t.job_id
        LEFT JOIN
        dict_marriage m ON m.id = t.marriage_id
        LEFT JOIN
        dict_identity i ON i.id = t.identity_id
        <where>
            <if test=" condition.name != null and condition.name != '' ">
                and t.name LIKE concat('%',#{condition.name},'%')
            </if>
            <if test=" condition.sex != null">
                and t.sex = #{condition.sex}
            </if>
            <if test=" condition.codeList != null">
                and t.code in
                <foreach item="item" index="index" collection="condition.codeList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.nationalIdList != null">
                and t.national_id in
                <foreach item="item" index="index" collection="condition.nationalIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.nativeIdList != null">
                and t.native_id in
                <foreach item="item" index="index" collection="condition.nativeIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.birthdayMin != null and condition.birthdayMin != ''">
                <![CDATA[ and t.birthday >= #{condition.birthdayMin} ]]>
            </if>
            <if test=" condition.birthdayMax != null and condition.birthdayMax != ''">
                <![CDATA[ and t.birthday <= #{condition.birthdayMax} ]]>
            </if>
            <if test=" condition.politicalName != null and condition.politicalName != ''">
                and t.political_name LIKE concat('%',#{condition.politicalName},'%')
            </if>
            <if test=" condition.educationName != null and condition.educationName != ''">
                and t.education_name LIKE concat('%',#{condition.educationName},'%')
            </if>
            <if test=" condition.degreeIdList != null ">
                and t.degree_id in
                <foreach item="item" index="index" collection="condition.degreeIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.partyDateMin != null and condition.partyDateMin != ''">
                <![CDATA[ and t.party_date >= #{condition.partyDateMin} ]]>
            </if>
            <if test=" condition.partyDateMax != null and condition.partyDateMax != ''">
                <![CDATA[ and t.party_date <= #{condition.partyDateMax} ]]>
            </if>
            <if test=" condition.workDateMin != null and condition.workDateMin != ''">
                <![CDATA[ and t.work_date >= #{condition.workDateMin} ]]>
            </if>
            <if test=" condition.workDateMax != null and condition.workDateMax != ''">
                <![CDATA[ and t.work_date <= #{condition.workDateMax} ]]>
            </if>
            <if test=" condition.schoolDateMin != null and condition.schoolDateMin != ''">
                <![CDATA[ and t.school_date >= #{condition.schoolDateMin} ]]>
            </if>
            <if test=" condition.schoolDateMax != null and condition.schoolDateMax != ''">
                <![CDATA[ and t.school_date <= #{condition.schoolDateMax} ]]>
            </if>
            <if test=" condition.jobName != null and condition.jobName != ''">
                and t.job_name LIKE concat('%',#{condition.jobName},'%')
            </if>
            <if test=" condition.jobCategoryList != null">
                and t.job_category in
                <foreach item="item" index="index" collection="condition.jobCategoryList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.jobIdList != null">
                and t.job_id in
                <foreach item="item" index="index" collection="condition.jobIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.jobDateMin != null and condition.jobDateMin != ''">
                <![CDATA[ and t.job_date >= #{condition.jobDateMin} ]]>
            </if>
            <if test=" condition.jobDateMax != null and condition.jobDateMax != ''">
                <![CDATA[ and t.job_date <= #{condition.jobDateMax} ]]>
            </if>
            <if test=" condition.jobLevelDateMin != null and condition.jobLevelDateMin != ''">
                <![CDATA[ and t.job_level_date >= #{condition.jobLevelDateMin} ]]>
            </if>
            <if test=" condition.jobLevelDateMax != null and condition.jobLevelDateMax != ''">
                <![CDATA[ and t.job_level_date <= #{condition.jobLevelDateMax} ]]>
            </if>
            <if test=" condition.status != null">
                and t.status = 0
            </if>
        </where>
    </select>

    <select id="findPeoplePageCondition2" resultMap="peopleVoResultMap" parameterType="PageInfo">
        SELECT
        t.id,
        t.code,
        t.name,
        t.sex,
        t.national_id,
        n.name as national_name,
        t.birthday,
        t.native_id,
        na.name as native_name,
        t.education_name,
        t.degree_id,
        de.name as degree_name,
        t.political_name,
        t.party_date,
        t.work_date,
        t.school_date,
        t.job_name,
        t.job_category,
        t.job_id,
        j.job_level as job_level_name,
        t.job_date,
        t.job_level_date,
        t.age,
        t.virtual_age,
        t.work_age,
        t.formation,
        t.mobile,
        t.marriage_id,
        m.name as marriage_name,
        t.photo_id,
        t.address,
        t.hukou,
        t.hukou_address,
        t.final_education_name,
        t.major,
        t.graduate_school,
        t.contact,
        t.relationship,
        t.contact_number,
        t.family_info_1,
        t.family_info_2,
        t.family_info_3,
        t.family_info_4,
        t.photo,
        t.identity_id,
        i.name as identity_name,
        t.status
        FROM
        people_total t
        LEFT JOIN
        dict_national n ON n.id = t.national_id
        LEFT JOIN
        dict_native na ON na.id = t.native_id
        LEFT JOIN
        dict_degree de ON de.id = t.degree_id
        LEFT JOIN
        job j ON j.id = t.job_id
        LEFT JOIN
        dict_marriage m ON m.id = t.marriage_id
        LEFT JOIN
        dict_identity i ON i.id = t.identity_id
        <where>
            <if test=" condition.name != null and condition.name != '' ">
                and t.name LIKE concat('%',#{condition.name},'%')
            </if>
            <if test=" condition.sex != null">
                and t.sex = #{condition.sex}
            </if>
            <if test=" condition.codeList != null">
                and t.code in
                <foreach item="item" index="index" collection="condition.codeList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.nationalIdList != null">
                and t.national_id in
                <foreach item="item" index="index" collection="condition.nationalIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.nativeIdList != null">
                and t.native_id in
                <foreach item="item" index="index" collection="condition.nativeIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.birthdayMin != null and condition.birthdayMin != ''">
                <![CDATA[ and t.birthday >= #{condition.birthdayMin} ]]>
            </if>
            <if test=" condition.birthdayMax != null and condition.birthdayMax != ''">
                <![CDATA[ and t.birthday <= #{condition.birthdayMax} ]]>
            </if>
            <if test=" condition.politicalName != null and condition.politicalName != ''">
                and t.political_name LIKE concat('%',#{condition.politicalName},'%')
            </if>
            <if test=" condition.educationName != null and condition.educationName != ''">
                and t.education_name LIKE concat('%',#{condition.educationName},'%')
            </if>
            <if test=" condition.degreeIdList != null ">
                and t.degree_id in
                <foreach item="item" index="index" collection="condition.degreeIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.partyDateMin != null and condition.partyDateMin != ''">
                <![CDATA[ and t.party_date >= #{condition.partyDateMin} ]]>
            </if>
            <if test=" condition.partyDateMax != null and condition.partyDateMax != ''">
                <![CDATA[ and t.party_date <= #{condition.partyDateMax} ]]>
            </if>
            <if test=" condition.workDateMin != null and condition.workDateMin != ''">
                <![CDATA[ and t.work_date >= #{condition.workDateMin} ]]>
            </if>
            <if test=" condition.workDateMax != null and condition.workDateMax != ''">
                <![CDATA[ and t.work_date <= #{condition.workDateMax} ]]>
            </if>
            <if test=" condition.schoolDateMin != null and condition.schoolDateMin != ''">
                <![CDATA[ and t.school_date >= #{condition.schoolDateMin} ]]>
            </if>
            <if test=" condition.schoolDateMax != null and condition.schoolDateMax != ''">
                <![CDATA[ and t.school_date <= #{condition.schoolDateMax} ]]>
            </if>
            <if test=" condition.jobName != null and condition.jobName != ''">
                and t.job_name LIKE concat('%',#{condition.jobName},'%')
            </if>
            <if test=" condition.jobCategoryList != null">
                and t.job_category in
                <foreach item="item" index="index" collection="condition.jobCategoryList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.jobIdList != null">
                and t.job_id in
                <foreach item="item" index="index" collection="condition.jobIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.jobDateMin != null and condition.jobDateMin != ''">
                <![CDATA[ and t.job_date >= #{condition.jobDateMin} ]]>
            </if>
            <if test=" condition.jobDateMax != null and condition.jobDateMax != ''">
                <![CDATA[ and t.job_date <= #{condition.jobDateMax} ]]>
            </if>
            <if test=" condition.jobLevelDateMin != null and condition.jobLevelDateMin != ''">
                <![CDATA[ and t.job_level_date >= #{condition.jobLevelDateMin} ]]>
            </if>
            <if test=" condition.jobLevelDateMax != null and condition.jobLevelDateMax != ''">
                <![CDATA[ and t.job_level_date <= #{condition.jobLevelDateMax} ]]>
            </if>
            <if test=" condition.status != null">
                and t.status = #{condition.status}
            </if>
        </where>
        LIMIT #{from}, #{size}
    </select>

    <select id="findPeoplePageCount2" resultType="java.lang.Integer" parameterType="PageInfo">
        select count(t.id) count
        FROM
        people_total t
        LEFT JOIN
        dict_national n ON n.id = t.national_id
        LEFT JOIN
        dict_native na ON na.id = t.native_id
        LEFT JOIN
        dict_degree de ON de.id = t.degree_id
        LEFT JOIN
        job j ON j.id = t.job_id
        LEFT JOIN
        dict_marriage m ON m.id = t.marriage_id
        LEFT JOIN
        dict_identity i ON i.id = t.identity_id
        <where>
            <if test=" condition.name != null and condition.name != '' ">
                and t.name LIKE concat('%',#{condition.name},'%')
            </if>
            <if test=" condition.sex != null">
                and t.sex = #{condition.sex}
            </if>
            <if test=" condition.codeList != null">
                and t.code in
                <foreach item="item" index="index" collection="condition.codeList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.nationalIdList != null">
                and t.national_id in
                <foreach item="item" index="index" collection="condition.nationalIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.nativeIdList != null">
                and t.native_id in
                <foreach item="item" index="index" collection="condition.nativeIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.birthdayMin != null and condition.birthdayMin != ''">
                <![CDATA[ and t.birthday >= #{condition.birthdayMin} ]]>
            </if>
            <if test=" condition.birthdayMax != null and condition.birthdayMax != ''">
                <![CDATA[ and t.birthday <= #{condition.birthdayMax} ]]>
            </if>
            <if test=" condition.politicalName != null and condition.politicalName != ''">
                and t.political_name LIKE concat('%',#{condition.politicalName},'%')
            </if>
            <if test=" condition.educationName != null and condition.educationName != ''">
                and t.education_name LIKE concat('%',#{condition.educationName},'%')
            </if>
            <if test=" condition.degreeIdList != null ">
                and t.degree_id in
                <foreach item="item" index="index" collection="condition.degreeIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.partyDateMin != null and condition.partyDateMin != ''">
                <![CDATA[ and t.party_date >= #{condition.partyDateMin} ]]>
            </if>
            <if test=" condition.partyDateMax != null and condition.partyDateMax != ''">
                <![CDATA[ and t.party_date <= #{condition.partyDateMax} ]]>
            </if>
            <if test=" condition.workDateMin != null and condition.workDateMin != ''">
                <![CDATA[ and t.work_date >= #{condition.workDateMin} ]]>
            </if>
            <if test=" condition.workDateMax != null and condition.workDateMax != ''">
                <![CDATA[ and t.work_date <= #{condition.workDateMax} ]]>
            </if>
            <if test=" condition.schoolDateMin != null and condition.schoolDateMin != ''">
                <![CDATA[ and t.school_date >= #{condition.schoolDateMin} ]]>
            </if>
            <if test=" condition.schoolDateMax != null and condition.schoolDateMax != ''">
                <![CDATA[ and t.school_date <= #{condition.schoolDateMax} ]]>
            </if>
            <if test=" condition.jobName != null and condition.jobName != ''">
                and t.job_name LIKE concat('%',#{condition.jobName},'%')
            </if>
            <if test=" condition.jobCategoryList != null">
                and t.job_category in
                <foreach item="item" index="index" collection="condition.jobCategoryList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.jobIdList != null">
                and t.job_id in
                <foreach item="item" index="index" collection="condition.jobIdList" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test=" condition.jobDateMin != null and condition.jobDateMin != ''">
                <![CDATA[ and t.job_date >= #{condition.jobDateMin} ]]>
            </if>
            <if test=" condition.jobDateMax != null and condition.jobDateMax != ''">
                <![CDATA[ and t.job_date <= #{condition.jobDateMax} ]]>
            </if>
            <if test=" condition.jobLevelDateMin != null and condition.jobLevelDateMin != ''">
                <![CDATA[ and t.job_level_date >= #{condition.jobLevelDateMin} ]]>
            </if>
            <if test=" condition.jobLevelDateMax != null and condition.jobLevelDateMax != ''">
                <![CDATA[ and t.job_level_date <= #{condition.jobLevelDateMax} ]]>
            </if>
            <if test=" condition.status != null">
                and t.status = #{condition.status}
            </if>
        </where>
    </select>

    <select id="findPeopleNearRetirePageCondition" resultMap="peopleVoResultMap" parameterType="PageInfo">
        SELECT
        t.id,
        t.code,
        t.name,
        t.sex,
        t.national_id,
        n.name as national_name,
        t.birthday,
        t.native_id,
        na.name as native_name,
        t.education_name,
        t.degree_id,
        de.name as degree_name,
        t.political_name,
        t.party_date,
        t.work_date,
        t.school_date,
        t.job_name,
        t.job_category,
        t.job_id,
        j.job_level as job_level_name,
        t.job_date,
        t.job_level_date,
        t.age,
        t.virtual_age,
        t.work_age,
        t.formation,
        t.mobile,
        t.marriage_id,
        m.name as marriage_name,
        t.photo_id,
        t.address,
        t.hukou,
        t.hukou_address,
        t.final_education_name,
        t.major,
        t.graduate_school,
        t.contact,
        t.relationship,
        t.contact_number,
        t.family_info_1,
        t.family_info_2,
        t.family_info_3,
        t.family_info_4,
        t.photo,
        t.identity_id,
        i.name as identity_name,
        t.status
        FROM
          people_total t
        LEFT JOIN
        dict_national n ON n.id = t.national_id
        LEFT JOIN
        dict_native na ON na.id = t.native_id
        LEFT JOIN
        dict_degree de ON de.id = t.degree_id
        LEFT JOIN
        job j ON j.id = t.job_id
        LEFT JOIN
        dict_marriage m ON m.id = t.marriage_id
        LEFT JOIN
        dict_identity i ON i.id = t.identity_id
        <where>
            t.status = 0
            AND
            (
            (TIMESTAMPDIFF(YEAR, t.birthday, CURDATE()) >= 59 and t.sex = 0)
            OR
            (TIMESTAMPDIFF(YEAR, t.birthday, CURDATE()) >= 54 and t.sex = 1)
            )
        </where>
        LIMIT #{from}, #{size}
    </select>

    <select id="findPeopleNearRetirePageCount" resultType="java.lang.Integer" parameterType="PageInfo">
        select count(t.id) count
        FROM
        people_total t
        LEFT JOIN
        dict_national n ON n.id = t.national_id
        LEFT JOIN
        dict_native na ON na.id = t.native_id
        LEFT JOIN
        dict_degree de ON de.id = t.degree_id
        LEFT JOIN
        job j ON j.id = t.job_id
        LEFT JOIN
        dict_marriage m ON m.id = t.marriage_id
        LEFT JOIN
        dict_identity i ON i.id = t.identity_id
        <where>
            t.status = 0
            AND
            (
            (TIMESTAMPDIFF(YEAR, t.birthday, CURDATE()) >= 59 and t.sex = 0)
            OR
            (TIMESTAMPDIFF(YEAR, t.birthday, CURDATE()) >= 54 and t.sex = 1)
            )
        </where>
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from people_total
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="batchDeleteByIds" parameterType="java.util.ArrayList">
        delete from people_total
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <insert id="insert" parameterType="com.wangzhixuan.model.People">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into people_total (
          code, name, sex, national_id, birthday, native_id, education_name, degree_id,
          political_name, party_date, work_date, school_date, job_name, job_category, job_id,
          job_date, job_level_date, age, virtual_age, work_age, formation, mobile, marriage_id,
          photo_id, address, hukou, hukou_address, final_education_name, major, graduate_school,
          contact, relationship, contact_number, family_info_1, family_info_2, family_info_3,
          family_info_4, photo, identity_id, status)
        values (
          #{code, jdbcType=VARCHAR},
          #{name, jdbcType=VARCHAR},
          #{sex,  jdbcType=TINYINT},
          #{nationalId, jdbcType=INTEGER},
          #{birthday,jdbcType=DATE},
          #{nativeId, jdbcType=INTEGER},
          #{educationName, jdbcType=VARCHAR},
          #{degreeId, jdbcType=INTEGER},
          #{politicalName, jdbcType=VARCHAR},
          #{partyDate, jdbcType=DATE},
          #{workDate, jdbcType=DATE},
          #{schoolDate, jdbcType=DATE},
          #{jobName, jdbcType=VARCHAR},
          #{jobCategory, jdbcType=VARCHAR},
          #{jobId, jdbcType=INTEGER},
          #{jobDate, jdbcType=DATE},
          #{jobLevelDate, jdbcType=DATE},
          #{age, jdbcType=INTEGER},
          #{virtualAge, jdbcType=INTEGER},
          #{workAge, jdbcType=INTEGER},
          #{formation, jdbcType=VARCHAR},
          #{mobile, jdbcType=VARCHAR},
          #{marriageId, jdbcType=INTEGER},
          #{photoId, jdbcType=VARCHAR},
          #{address, jdbcType=VARCHAR},
          #{hukou, jdbcType=VARCHAR},
          #{hukouAddress, jdbcType=VARCHAR},
          #{finalEducationName, jdbcType=VARCHAR},
          #{major,  jdbcType=VARCHAR},
          #{graduateSchool, jdbcType=VARCHAR},
          #{contact, jdbcType=VARCHAR},
          #{relationship, jdbcType=VARCHAR},
          #{contactNumber, jdbcType=VARCHAR},
          #{familyInfo1, jdbcType=VARCHAR},
          #{familyInfo2, jdbcType=VARCHAR},
          #{familyInfo3, jdbcType=VARCHAR},
          #{familyInfo4, jdbcType=VARCHAR},
          #{photo, jdbcType=VARCHAR},
          #{identityId, jdbcType=INTEGER},
          #{status, jdbcType=INTEGER}
         )
    </insert>
    <insert id="insertByImport" parameterType="java.util.List">
        insert into people_total (
          code, name, sex, national_id, birthday, native_id, education_name, degree_id,
          political_name, party_date, work_date, school_date, job_name, job_category, job_id,
          job_date, job_level_date, age, virtual_age, work_age, formation, mobile, marriage_id,
          photo_id, address, hukou, hukou_address, final_education_name, major, graduate_school,
          contact, relationship, contact_number, family_info_1, family_info_2, family_info_3,
          family_info_4, photo, identity_id, status )
        values
        <foreach item="item" index="index" collection="list" separator=",">
          (
            #{item.code, jdbcType=VARCHAR},
            #{item.name, jdbcType=VARCHAR},
            #{item.sex,  jdbcType=TINYINT},
            #{item.nationalId, jdbcType=INTEGER},
            #{item.birthday,jdbcType=DATE},
            #{item.nativeId, jdbcType=INTEGER},
            #{item.educationName, jdbcType=VARCHAR},
            #{item.degreeId, jdbcType=INTEGER},
            #{item.politicalName, jdbcType=VARCHAR},
            #{item.partyDate, jdbcType=DATE},
            #{item.workDate, jdbcType=DATE},
            #{item.schoolDate, jdbcType=DATE},
            #{item.jobName, jdbcType=VARCHAR},
            #{item.jobCategory, jdbcType=VARCHAR},
            #{item.jobId, jdbcType=INTEGER},
            #{item.jobDate, jdbcType=DATE},
            #{item.jobLevelDate, jdbcType=DATE},
            #{item.age, jdbcType=INTEGER},
            #{item.virtualAge, jdbcType=INTEGER},
            #{item.workAge, jdbcType=INTEGER},
            #{item.formation, jdbcType=VARCHAR},
            #{item.mobile, jdbcType=VARCHAR},
            #{item.marriageId, jdbcType=INTEGER},
            #{item.photoId, jdbcType=VARCHAR},
            #{item.address, jdbcType=VARCHAR},
            #{item.hukou, jdbcType=VARCHAR},
            #{item.hukouAddress, jdbcType=VARCHAR},
            #{item.finalEducationName, jdbcType=VARCHAR},
            #{item.major,  jdbcType=VARCHAR},
            #{item.graduateSchool, jdbcType=VARCHAR},
            #{item.contact, jdbcType=VARCHAR},
            #{item.relationship, jdbcType=VARCHAR},
            #{item.contactNumber, jdbcType=VARCHAR},
            #{item.familyInfo1, jdbcType=VARCHAR},
            #{item.familyInfo2, jdbcType=VARCHAR},
            #{item.familyInfo3, jdbcType=VARCHAR},
            #{item.familyInfo4, jdbcType=VARCHAR},
            #{item.photo, jdbcType=VARCHAR},
            #{item.identityId, jdbcType=INTEGER},
            #{item.status, jdbcType=INTEGER}
	      )  
        </foreach>
    </insert>
    <update id="updatePeople" parameterType="com.wangzhixuan.model.People">
        update people_total
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="nationalId != null">
                national_id = #{nationalId, jdbcType=INTEGER},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=DATE},
            </if>
            <if test="nativeId != null">
                native_id = #{nativeId, jdbcType=INTEGER},
            </if>

            education_name = #{educationName, jdbcType=VARCHAR},

            <if test="degreeId != null">
                degree_id = #{degreeId, jdbcType=INTEGER},
            </if>

            political_name = #{politicalName, jdbcType=VARCHAR},

            <if test="partyDate != null">
                party_date  = #{partyDate, jdbcType=DATE},
            </if>

            <if test="workDate != null">
                work_date  = #{workDate, jdbcType=DATE},
            </if>

            <if test="schoolDate != null">
                school_date = #{schoolDate, jdbcType=DATE},
            </if>

            job_name = #{jobName, jdbcType=VARCHAR},
            job_category = #{jobCategory,jdbcType=VARCHAR},

            <if test="jobId != null">
                job_id = #{jobId, jdbcType=INTEGER},
            </if>

            <if test="jobDate != null">
                job_date = #{jobDate, jdbcType=DATE},
            </if>

            <if test="jobLevelDate != null">
                job_level_date = #{jobLevelDate, jdbcType=DATE},
            </if>

            <if test="age != null">
                age = #{age, jdbcType=INTEGER},
            </if>
            <if test="virtualAge != null">
                virtual_age = #{virtualAge, jdbcType=INTEGER},
            </if>
            <if test="workAge != null">
                work_age = #{workAge, jdbcType=INTEGER},
            </if>

            formation = #{formation, jdbcType=VARCHAR},
            mobile    = #{mobile, jdbcType=VARCHAR},

            <if test="marriageId != null">
                marriage_id = #{marriageId, jdbcType=INTEGER},
            </if>

            photo_id  = #{photoId, jdbcType=VARCHAR},
            address   = #{address, jdbcType=VARCHAR},
            hukou     = #{hukou,   jdbcType=VARCHAR},
            hukou_address = #{hukouAddress, jdbcType=VARCHAR},
            final_education_name = #{finalEducationName, jdbcType=VARCHAR},
            major     = #{major,  jdbcType=VARCHAR},
            graduate_school = #{graduateSchool, jdbcType=VARCHAR},
            contact   = #{contact, jdbcType=VARCHAR},
            relationship = #{relationship, jdbcType=VARCHAR},
            contact_number = #{contactNumber, jdbcType=VARCHAR},
            family_info_1 = #{familyInfo1, jdbcType=VARCHAR},
            family_info_2 = #{familyInfo2, jdbcType=VARCHAR},
            family_info_3 = #{familyInfo3, jdbcType=VARCHAR},
            family_info_4 = #{familyInfo4, jdbcType=VARCHAR},

            <if test="identityId != null">
                identity_id = #{identityId, jdbcType=INTEGER},
            </if>

            <if test="photo != null">
                photo = #{photo, jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status, jdbcType=INTEGER},
            </if>

        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectPeopleByIds" resultMap="BaseResultMap" parameterType="java.util.ArrayList">
        select
        <include refid="Base_Column_List" />
        from people_total
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectPeopleVoByIds" resultMap="peopleVoResultMap" parameterType="java.util.ArrayList">
        select
            t.id,
            t.code,
            t.name,
            t.sex,
            t.national_id,
            n.name as national_name,
            t.birthday,
            t.native_id,
            na.name as native_name,
            t.education_name,
            t.degree_id,
            de.name as degree_name,
            t.political_name,
            t.party_date,
            t.work_date,
            t.school_date,
            t.job_name,
            t.job_category,
            t.job_id,
            j.job_level as job_level_name,
            t.job_date,
            t.job_level_date,
            t.age,
            t.virtual_age,
            t.work_age,
            t.formation,
            t.mobile,
            t.marriage_id,
            m.name as marriage_name,
            t.photo_id,
            t.address,
            t.hukou,
            t.hukou_address,
            t.final_education_name,
            t.major,
            t.graduate_school,
            t.contact,
            t.relationship,
            t.contact_number,
            t.family_info_1,
            t.family_info_2,
            t.family_info_3,
            t.family_info_4,
            t.photo,
            t.identity_id,
            i.name as identity_name,
            t.status
        FROM
        people_total t
        LEFT JOIN
          dict_national n ON n.id = t.national_id
        LEFT JOIN
          dict_native na ON na.id = t.native_id
        LEFT JOIN
          dict_degree de ON de.id = t.degree_id
        LEFT JOIN
          job j ON j.id = t.job_id
        LEFT JOIN
          dict_marriage m ON m.id = t.degree_id
        LEFT JOIN
          dict_identity i ON i.id = t.identity_id
        where t.id in
          <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
          </foreach>
    </select>
</mapper>