<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangzhixuan.mapper.PeopleContract2SalaryMapper">
	<resultMap id="BaseResultMap" type="com.wangzhixuan.model.PeopleContractSalary">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="people_code" property="peopleCode" jdbcType="VARCHAR" />
		<result column="job_id" property="jobId" jdbcType="INTEGER" />
		<result column="job_salary" property="jobSalary" jdbcType="DECIMAL" />
		<result column="school_salary" property="schoolSalary" jdbcType="DECIMAL" />
		<result column="exam_result" property="examResult" jdbcType="VARCHAR" />
		<result column="job_exam_salary" property="jobExamSalary" jdbcType="DECIMAL" />
		<result column="telephone_allowance" property="telephoneAllowance" jdbcType="DECIMAL" />
		<result column="traffic_allowance" property="trafficAllowance" jdbcType="DECIMAL" />
		<result column="special_allowance" property="specialAllowance" jdbcType="DECIMAL" />
		<result column="head_allowance" property="headAllowance" jdbcType="DECIMAL" />
		<result column="extra_work_fee" property="extraWorkFee" jdbcType="DECIMAL" />
		<result column="extra_work_date" property="extraWorkDate" jdbcType="DECIMAL" />
		<result column="extra_work_allowance" property="extraWorkAllowance" jdbcType="DECIMAL" />
		<result column="bonus" property="bonus" jdbcType="DECIMAL" />
		<result column="reissue_fee" property="reissueFee" jdbcType="DECIMAL" />
		<result column="temperature_allowance" property="temperatureAllowance" jdbcType="DECIMAL" />
		<result column="gross_income" property="grossIncome" jdbcType="DECIMAL" />
		<result column="life_insurance" property="lifeInsurance" jdbcType="DECIMAL" />
		<result column="job_insurance" property="jobInsurance" jdbcType="DECIMAL" />
		<result column="health_insurance" property="healthInsurance" jdbcType="DECIMAL" />
		<result column="house_fund" property="houseFund" jdbcType="DECIMAL" />
		<result column="expense" property="expense" jdbcType="DECIMAL" />
		<result column="net_income" property="netIncome" jdbcType="DECIMAL" />
		<result column="pay_date" property="payDate" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="peopleContractSalaryVoResultMap" type="com.wangzhixuan.vo.PeopleContractSalaryVo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="people_code" property="peopleCode" jdbcType="VARCHAR" />
		<result column="people_name" property="peopleName" jdbcType="VARCHAR" />
		<result column="job_id" property="jobId" jdbcType="INTEGER" />
		<result column="job_salary" property="jobSalary" jdbcType="DECIMAL" />
        <result column="job_category"   jdbcType="VARCHAR" property="jobCategory"/>
        <result column="job_level"      jdbcType="VARCHAR" property="jobLevel" />
		<result column="school_salary" property="schoolSalary" jdbcType="DECIMAL" />
		<result column="exam_result" property="examResult" jdbcType="VARCHAR" />
		<result column="job_exam_salary" property="jobExamSalary" jdbcType="DECIMAL" />
		<result column="telephone_allowance" property="telephoneAllowance" jdbcType="DECIMAL" />
		<result column="traffic_allowance" property="trafficAllowance" jdbcType="DECIMAL" />
		<result column="special_allowance" property="specialAllowance" jdbcType="DECIMAL" />
		<result column="head_allowance" property="headAllowance" jdbcType="DECIMAL" />
		<result column="extra_work_fee" property="extraWorkFee" jdbcType="DECIMAL" />
		<result column="extra_work_date" property="extraWorkDate" jdbcType="DECIMAL" />
		<result column="extra_work_allowance" property="extraWorkAllowance" jdbcType="DECIMAL" />
		<result column="bonus" property="bonus" jdbcType="DECIMAL" />
		<result column="reissue_fee" property="reissueFee" jdbcType="DECIMAL" />
		<result column="temperature_allowance" property="temperatureAllowance" jdbcType="DECIMAL" />
		<result column="gross_income" property="grossIncome" jdbcType="DECIMAL" />
		<result column="life_insurance" property="lifeInsurance" jdbcType="DECIMAL" />
		<result column="job_insurance" property="jobInsurance" jdbcType="DECIMAL" />
		<result column="health_insurance" property="healthInsurance" jdbcType="DECIMAL" />
		<result column="house_fund" property="houseFund" jdbcType="DECIMAL" />
		<result column="expense" property="expense" jdbcType="DECIMAL" />
		<result column="net_income" property="netIncome" jdbcType="DECIMAL" />
		<result column="pay_date" property="payDate" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="peopleContract2SalaryBaseMap" type="com.wangzhixuan.model.PeopleContract2SalaryBase">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="people_code" property="peopleCode" jdbcType="VARCHAR" />
		<result column="job_id" property="jobId" jdbcType="INTEGER" />
		<result column="job_salary" property="jobSalary" jdbcType="DECIMAL" />
		<result column="school_salary" property="schoolSalary" jdbcType="DECIMAL" />
		<result column="exam_result" property="examResult" jdbcType="VARCHAR" />
		<result column="job_exam_salary" property="jobExamSalary" jdbcType="DECIMAL" />
		<result column="telephone_allowance" property="telephoneAllowance" jdbcType="DECIMAL" />
		<result column="traffic_allowance" property="trafficAllowance" jdbcType="DECIMAL" />
		<result column="special_allowance" property="specialAllowance" jdbcType="DECIMAL" />
		<result column="head_allowance" property="headAllowance" jdbcType="DECIMAL" />
		<result column="extra_work_fee" property="extraWorkFee" jdbcType="DECIMAL" />
		<result column="extra_work_date" property="extraWorkDate" jdbcType="DECIMAL" />
		<result column="extra_work_allowance" property="extraWorkAllowance" jdbcType="DECIMAL" />
		<result column="bonus" property="bonus" jdbcType="DECIMAL" />
		<result column="reissue_fee" property="reissueFee" jdbcType="DECIMAL" />
		<result column="temperature_allowance" property="temperatureAllowance" jdbcType="DECIMAL" />
		<result column="gross_income" property="grossIncome" jdbcType="DECIMAL" />
		<result column="life_insurance" property="lifeInsurance" jdbcType="DECIMAL" />
		<result column="job_insurance" property="jobInsurance" jdbcType="DECIMAL" />
		<result column="health_insurance" property="healthInsurance" jdbcType="DECIMAL" />
		<result column="house_fund" property="houseFund" jdbcType="DECIMAL" />
		<result column="expense" property="expense" jdbcType="DECIMAL" />
		<result column="net_income" property="netIncome" jdbcType="DECIMAL" />
		<result column="last_change_date" property="lastChangeDate" jdbcType="DATE" />
	</resultMap>
	<sql id="Base_Column_List">
		id, people_code, job_id, job_salary, school_salary,
		exam_result,
		job_exam_salary,
		telephone_allowance, traffic_allowance,
		special_allowance, head_allowance, extra_work_fee,
		extra_work_date,
		extra_work_allowance, bonus, reissue_fee,
		temperature_allowance,
		gross_income, life_insurance, job_insurance, health_insurance,
		house_fund, expense,
		net_income, pay_date
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from people_contract_2_salary
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="findPeopleContractSalaryVoById" resultMap="peopleContractSalaryVoResultMap" parameterType="java.lang.Long">
	SELECT
		t.id,
		t.people_code,
		p.name as people_name,
		t.job_id, 
        j.job_category as job_category,
        j.job_level as job_level,
		t.job_salary, 
		t.school_salary,
		t.exam_result,
		t.job_exam_salary,
		t.telephone_allowance, 
		t.traffic_allowance,
		t.special_allowance, 
		t.head_allowance,
		t.extra_work_fee,
		t.extra_work_date,
		t.extra_work_allowance,
		t.bonus,
		t.reissue_fee,
		t.temperature_allowance,
		t.gross_income,
		t.reissue_fee,
		t.life_insurance,
		t.job_insurance,
		t.health_insurance,
		t.house_fund,
		t.expense,
		t.net_income,
		t.pay_date
		FROM
		people_contract_2_salary t LEFT JOIN people_contract_2 p
		ON t.people_code = p.code
		LEFT JOIN job j ON
		t.job_id = j.id
		where t.id = #{id,jdbcType=INTEGER}
	</select>
	<select id="findPeopleContractSalaryVoListByCode" resultMap="peopleContractSalaryVoResultMap" parameterType="java.lang.String">
		SELECT
		t.id,
		t.people_code,
		p.name as people_name,
		t.job_id,
		t.job_salary,
		t.school_salary,
		t.exam_result,
		t.job_exam_salary,
		t.telephone_allowance,
		t.traffic_allowance,
		t.special_allowance,
		t.head_allowance,
		t.extra_work_fee,
		t.extra_work_date,
		t.extra_work_allowance,
		t.bonus,
		t.reissue_fee,
		t.temperature_allowance,
		t.gross_income,
		t.life_insurance,
		t.job_insurance,
		t.health_insurance,
		t.house_fund,
		t.expense,
		t.net_income,
		t.pay_date
		FROM people_contract_2_salary t
		LEFT JOIN people_contract_2 p
		ON t.people_code = p.code
		where t.people_code = #{peopleCode}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		people_contract_2_salary
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="java.util.List">
		insert into people_contract_2_salary (
		people_code, job_id, job_salary, school_salary, exam_result, job_exam_salary, telephone_allowance, traffic_allowance,
		special_allowance, head_allowance, extra_work_fee, extra_work_date, extra_work_allowance, bonus, reissue_fee,
		temperature_allowance, gross_income, life_insurance, job_insurance, health_insurance, house_fund, expense, net_income, pay_date
		)
		VALUES
			(
			#{peopleCode,jdbcType=VARCHAR},
			#{jobId,jdbcType=INTEGER},
			#{jobSalary,jdbcType=DECIMAL},
			#{schoolSalary,jdbcType=DECIMAL},
			#{examResult,jdbcType=VARCHAR},
			#{jobExamSalary,jdbcType=DECIMAL},
			#{telephoneAllowance,jdbcType=DECIMAL},
			#{trafficAllowance,jdbcType=DECIMAL},
			#{specialAllowance,jdbcType=DECIMAL},
			#{headAllowance,jdbcType=DECIMAL},
			#{extraWorkFee,jdbcType=DECIMAL},
			#{extraWorkDate,jdbcType=DECIMAL},
			#{extraWorkAllowance,jdbcType=DECIMAL},
			#{bonus,jdbcType=DECIMAL},
			#{reissueFee,jdbcType=DECIMAL},
			#{temperatureAllowance,jdbcType=DECIMAL},
			#{grossIncome,jdbcType=DECIMAL},
			#{lifeInsurance,jdbcType=DECIMAL},
			#{jobInsurance,jdbcType=DECIMAL},
			#{healthInsurance,jdbcType=DECIMAL},
			#{houseFund,jdbcType=DECIMAL},
			#{expense,jdbcType=DECIMAL},
			#{netIncome,jdbcType=DECIMAL},
			#{payDate,jdbcType=VARCHAR}
			)
	</insert>
	<insert id="insertByImport" parameterType="java.util.List">
		insert into people_contract_2_salary (
		people_code, job_id, job_salary, school_salary, exam_result, job_exam_salary, telephone_allowance, traffic_allowance,
		special_allowance, head_allowance, extra_work_fee, extra_work_date, extra_work_allowance, bonus, reissue_fee,
		temperature_allowance, gross_income, life_insurance, job_insurance, health_insurance, house_fund, expense, net_income, pay_date
		)
		VALUES
		<foreach item="item" index="index" collection="list" separator=",">
			(
		      #{item.peopleCode,jdbcType=VARCHAR},
			  #{item.jobId,jdbcType=INTEGER},
		      #{item.jobSalary,jdbcType=DECIMAL},
		      #{item.schoolSalary,jdbcType=DECIMAL},
		      #{item.examResult,jdbcType=VARCHAR},
			  #{item.jobExamSalary,jdbcType=DECIMAL},
		      #{item.telephoneAllowance,jdbcType=DECIMAL},
		      #{item.trafficAllowance,jdbcType=DECIMAL},
		      #{item.specialAllowance,jdbcType=DECIMAL},
		      #{item.headAllowance,jdbcType=DECIMAL},
			  #{item.extraWorkFee,jdbcType=DECIMAL},
		      #{item.extraWorkDate,jdbcType=DECIMAL},
		      #{item.extraWorkAllowance,jdbcType=DECIMAL},
			  #{item.bonus,jdbcType=DECIMAL},
		      #{item.reissueFee,jdbcType=DECIMAL},
		      #{item.temperatureAllowance,jdbcType=DECIMAL},
		      #{item.grossIncome,jdbcType=DECIMAL},
			  #{item.lifeInsurance,jdbcType=DECIMAL},
		      #{item.jobInsurance,jdbcType=DECIMAL},
		      #{item.healthInsurance,jdbcType=DECIMAL},
		      #{item.houseFund,jdbcType=DECIMAL},
		      #{item.expense,jdbcType=DECIMAL},
		      #{item.netIncome,jdbcType=DECIMAL},
			  #{item.payDate,jdbcType=VARCHAR}
		)
		</foreach>
	</insert>
	<insert id="insertSelective" parameterType="com.wangzhixuan.model.PeopleContractSalary">
		insert into people_contract_2_salary
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="peopleCode != null">
				people_code,
			</if>
			<if test="jobId != null">
				job_id,
			</if>
			<if test="jobSalary != null">
				job_salary,
			</if>
			<if test="schoolSalary != null">
				school_salary,
			</if>
			<if test="examResult != null">
				exam_result,
			</if>
			<if test="jobExamSalary != null">
				job_exam_salary,
			</if>
			<if test="telephoneAllowance != null">
				telephone_allowance,
			</if>
			<if test="trafficAllowance != null">
				traffic_allowance,
			</if>
			<if test="specialAllowance != null">
				special_allowance,
			</if>
			<if test="headAllowance != null">
				head_allowance,
			</if>
			<if test="extraWorkFee != null">
				extra_work_fee,
			</if>
			<if test="extraWorkDate != null">
				extra_work_date,
			</if>
			<if test="extraWorkAllowance != null">
				extra_work_allowance,
			</if>
			<if test="bonus != null">
				bonus,
			</if>
			<if test="reissueFee != null">
				reissue_fee,
			</if>
			<if test="temperatureAllowance != null">
				temperature_allowance,
			</if>
			<if test="grossIncome != null">
				gross_income,
			</if>
			<if test="lifeInsurance != null">
				life_insurance,
			</if>
			<if test="jobInsurance != null">
				job_insurance,
			</if>
			<if test="healthInsurance != null">
				health_insurance,
			</if>
			<if test="houseFund != null">
				house_fund,
			</if>
			<if test="expense != null">
				expense,
			</if>
			<if test="netIncome != null">
				net_income,
			</if>
			<if test="payDate != null">
				pay_date,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="peopleCode != null">
				#{peopleCode,jdbcType=VARCHAR},
			</if>
			<if test="jobId != null">
				#{jobId,jdbcType=INTEGER},
			</if>
			<if test="jobSalary != null">
				#{jobSalary,jdbcType=DECIMAL},
			</if>
			<if test="schoolSalary != null">
				#{schoolSalary,jdbcType=DECIMAL},
			</if>
			<if test="examResult != null">
				#{examResult,jdbcType=VARCHAR},
			</if>
			<if test="jobExamSalary != null">
				#{jobExamSalary,jdbcType=DECIMAL},
			</if>
			<if test="telephoneAllowance != null">
				#{telephoneAllowance,jdbcType=DECIMAL},
			</if>
			<if test="trafficAllowance != null">
				#{trafficAllowance,jdbcType=DECIMAL},
			</if>
			<if test="specialAllowance != null">
				#{specialAllowance,jdbcType=DECIMAL},
			</if>
			<if test="headAllowance != null">
				#{headAllowance,jdbcType=DECIMAL},
			</if>
			<if test="extraWorkFee != null">
				#{extraWorkFee,jdbcType=DECIMAL},
			</if>
			<if test="extraWorkDate != null">
				#{extraWorkDate,jdbcType=DECIMAL},
			</if>
			<if test="extraWorkAllowance != null">
				#{extraWorkAllowance,jdbcType=DECIMAL},
			</if>
			<if test="bonus != null">
				#{bonus,jdbcType=DECIMAL},
			</if>
			<if test="reissueFee != null">
				#{reissueFee,jdbcType=DECIMAL},
			</if>
			<if test="temperatureAllowance != null">
				#{temperatureAllowance,jdbcType=DECIMAL},
			</if>
			<if test="grossIncome != null">
				#{grossIncome,jdbcType=DECIMAL},
			</if>
			<if test="lifeInsurance != null">
				#{lifeInsurance,jdbcType=DECIMAL},
			</if>
			<if test="jobInsurance != null">
				#{jobInsurance,jdbcType=DECIMAL},
			</if>
			<if test="healthInsurance != null">
				#{healthInsurance,jdbcType=DECIMAL},
			</if>
			<if test="houseFund != null">
				#{houseFund,jdbcType=DECIMAL},
			</if>
			<if test="expense != null">
				#{expense,jdbcType=DECIMAL},
			</if>
			<if test="netIncome != null">
				#{netIncome,jdbcType=DECIMAL},
			</if>
			<if test="payDate != null">
				#{payDate,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.wangzhixuan.model.PeopleContractSalary">
		update people_contract_2_salary
		<set>
			<if test="peopleCode != null">
				people_code = #{peopleCode,jdbcType=VARCHAR},
			</if>
			<if test="jobId != null">
				job_id = #{jobId,jdbcType=INTEGER},
			</if>
			<if test="jobSalary != null">
				job_salary = #{jobSalary,jdbcType=DECIMAL},
			</if>
			<if test="schoolSalary != null">
				school_salary = #{schoolSalary,jdbcType=DECIMAL},
			</if>
			<if test="examResult != null">
				exam_result = #{examResult,jdbcType=VARCHAR},
			</if>
			<if test="jobExamSalary != null">
				job_exam_salary = #{jobExamSalary,jdbcType=DECIMAL},
			</if>
			<if test="telephoneAllowance != null">
				telephone_allowance =
				#{telephoneAllowance,jdbcType=DECIMAL},
			</if>
			<if test="trafficAllowance != null">
				traffic_allowance = #{trafficAllowance,jdbcType=DECIMAL},
			</if>
			<if test="specialAllowance != null">
				special_allowance = #{specialAllowance,jdbcType=DECIMAL},
			</if>
			<if test="headAllowance != null">
				head_allowance = #{headAllowance,jdbcType=DECIMAL},
			</if>
			<if test="extraWorkFee != null">
				extra_work_fee = #{extraWorkFee,jdbcType=DECIMAL},
			</if>
			<if test="extraWorkDate != null">
				extra_work_date = #{extraWorkDate,jdbcType=DECIMAL},
			</if>
			<if test="extraWorkAllowance != null">
				extra_work_allowance =
				#{extraWorkAllowance,jdbcType=DECIMAL},
			</if>
			<if test="bonus != null">
				bonus = #{bonus,jdbcType=DECIMAL},
			</if>
			<if test="reissueFee != null">
				reissue_fee = #{reissueFee,jdbcType=DECIMAL},
			</if>
			<if test="temperatureAllowance != null">
				temperature_allowance =
				#{temperatureAllowance,jdbcType=DECIMAL},
			</if>
			<if test="grossIncome != null">
				gross_income = #{grossIncome,jdbcType=DECIMAL},
			</if>
			<if test="lifeInsurance != null">
				life_insurance = #{lifeInsurance,jdbcType=DECIMAL},
			</if>
			<if test="jobInsurance != null">
				job_insurance = #{jobInsurance,jdbcType=DECIMAL},
			</if>
			<if test="healthInsurance != null">
				health_insurance = #{healthInsurance,jdbcType=DECIMAL},
			</if>
			<if test="houseFund != null">
				house_fund = #{houseFund,jdbcType=DECIMAL},
			</if>
			<if test="expense != null">
				expense = #{expense,jdbcType=DECIMAL},
			</if>
			<if test="netIncome != null">
				net_income = #{netIncome,jdbcType=DECIMAL},
			</if>
			<if test="payDate != null">
				pay_date = #{payDate,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.wangzhixuan.model.PeopleContractSalary">
		update
		people_contract_2_salary
		set people_code =
		#{peopleCode,jdbcType=VARCHAR},
		job_id = #{jobId,jdbcType=INTEGER},
		job_salary =
		#{jobSalary,jdbcType=DECIMAL},
		school_salary =
		#{schoolSalary,jdbcType=DECIMAL},
		exam_result =
		#{examResult,jdbcType=VARCHAR},
		job_exam_salary =
		#{jobExamSalary,jdbcType=DECIMAL},
		telephone_allowance =
		#{telephoneAllowance,jdbcType=DECIMAL},
		traffic_allowance =
		#{trafficAllowance,jdbcType=DECIMAL},
		special_allowance =
		#{specialAllowance,jdbcType=DECIMAL},
		head_allowance =
		#{headAllowance,jdbcType=DECIMAL},
		extra_work_fee =
		#{extraWorkFee,jdbcType=DECIMAL},
		extra_work_date =
		#{extraWorkDate,jdbcType=DECIMAL},
		extra_work_allowance =
		#{extraWorkAllowance,jdbcType=DECIMAL},
		bonus =
		#{bonus,jdbcType=DECIMAL},
		reissue_fee =
		#{reissueFee,jdbcType=DECIMAL},
		temperature_allowance =
		#{temperatureAllowance,jdbcType=DECIMAL},
		gross_income =
		#{grossIncome,jdbcType=DECIMAL},
		life_insurance =
		#{lifeInsurance,jdbcType=DECIMAL},
		job_insurance =
		#{jobInsurance,jdbcType=DECIMAL},
		health_insurance =
		#{healthInsurance,jdbcType=DECIMAL},
		house_fund =
		#{houseFund,jdbcType=DECIMAL},
		expense = #{expense,jdbcType=DECIMAL},
		net_income = #{netIncome,jdbcType=DECIMAL},
		pay_date =
		#{payDate,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="findPeopleContractSalaryPageCount" resultType="java.lang.Integer" parameterType="PageInfo">
		select count(t.id) count
		FROM
		people_contract_2_salary t
		LEFT JOIN
		people_contract_2 p ON t.people_code = p.code
		LEFT JOIN
		job j ON t.job_id
		= j.id
		<where>
			<if test=" condition.peopleCode != null and condition.peopleCode != ''">
				and t.people_code LIKE
				concat('%',#{condition.peopleCode},'%')
			</if>
			<if test=" condition.peopleName != null and condition.peopleName != '' ">
				and p.name LIKE concat('%',#{condition.peopleName},'%')
			</if>
		</where>
	</select>
	<select id="findPeopleContractSalaryPageCondition" resultMap="peopleContractSalaryVoResultMap" parameterType="PageInfo">
		SELECT
		t.id,
		t.people_code,
		p.name as people_name,
		t.job_id, 
		t.job_salary, 
		j.job_category as job_category,
        j.job_level as job_level,
		t.school_salary,
		t.exam_result,
		t.job_exam_salary,
		t.telephone_allowance, 
		t.traffic_allowance,
		t.special_allowance, 
		t.head_allowance,
		t.extra_work_fee,
		t.extra_work_date,
		t.extra_work_allowance,
		t.bonus,
		t.reissue_fee,
		t.temperature_allowance,
		t.gross_income,
		t.reissue_fee,
		t.life_insurance,
		t.job_insurance,
		t.health_insurance,
		t.house_fund,
		t.expense,
		t.net_income,
		t.pay_date
		FROM
		people_contract_2_salary t LEFT JOIN people_contract_2 p
		ON t.people_code = p.code
		LEFT JOIN job j ON
		t.job_id = j.id
		<where>
			<if test=" condition.peopleCode != null and condition.peopleCode != ''">
				and t.people_code LIKE
				concat('%',#{condition.peopleCode},'%')
			</if>
			<if test=" condition.peopleName != null and condition.peopleName != '' ">
				and p.name LIKE concat('%',#{condition.peopleName},'%')
			</if>
		</where>
		ORDER BY
		t.pay_date desc
		LIMIT #{from}, #{size}
	</select>
	<select id="findPeopleContract2SalaryBaseByCode" resultMap="peopleContract2SalaryBaseMap" parameterType="java.lang.String">
		SELECT
		id,people_code, job_id, job_salary, school_salary, exam_result, job_exam_salary, telephone_allowance, traffic_allowance,
		special_allowance, head_allowance, extra_work_fee, extra_work_date, extra_work_allowance, bonus, reissue_fee,
		temperature_allowance, gross_income, life_insurance, job_insurance, health_insurance, house_fund, expense, net_income, last_change_date
		FROM
		people_contract_2_salary_base
		WHERE
		people_code = #{peopleCode}
	</select>

	<insert id="addSalaryBase" parameterType="com.wangzhixuan.model.PeopleContract2SalaryBase">
		INSERT INTO people_contract_2_salary_base(
		people_code, job_id, job_salary, school_salary, exam_result, job_exam_salary, telephone_allowance, traffic_allowance,
		special_allowance, head_allowance, extra_work_fee, extra_work_date, extra_work_allowance, bonus, reissue_fee,
		temperature_allowance, gross_income, life_insurance, job_insurance, health_insurance, house_fund, expense, net_income, last_change_date
		)
		VALUES (
		#{peopleCode,jdbcType=VARCHAR},
		#{jobId,jdbcType=INTEGER},
		#{jobSalary,jdbcType=DECIMAL},
		#{schoolSalary,jdbcType=DECIMAL},
		#{examResult,jdbcType=VARCHAR},
		#{jobExamSalary,jdbcType=DECIMAL},
		#{telephoneAllowance,jdbcType=DECIMAL},
		#{trafficAllowance,jdbcType=DECIMAL},
		#{specialAllowance,jdbcType=DECIMAL},
		#{headAllowance,jdbcType=DECIMAL},
		#{extraWorkFee,jdbcType=DECIMAL},
		#{extraWorkDate,jdbcType=DECIMAL},
		#{extraWorkAllowance,jdbcType=DECIMAL},
		#{bonus,jdbcType=DECIMAL},
		#{reissueFee,jdbcType=DECIMAL},
		#{temperatureAllowance,jdbcType=DECIMAL},
		#{grossIncome,jdbcType=DECIMAL},
		#{lifeInsurance,jdbcType=DECIMAL},
		#{jobInsurance,jdbcType=DECIMAL},
		#{healthInsurance,jdbcType=DECIMAL},
		#{houseFund,jdbcType=DECIMAL},
		#{expense,jdbcType=DECIMAL},
		#{netIncome,jdbcType=DECIMAL},
		#{lastChangeDate,jdbcType=DATE}
		)
	</insert>

	<update id="updateSalaryBase" parameterType="com.wangzhixuan.model.PeopleContract2SalaryBase">
		update people_contract_2_salary_base
		SET
		people_code 		= #{peopleCode,jdbcType=VARCHAR},
		job_id 				= #{jobId,jdbcType=INTEGER},
		job_salary 			= #{jobSalary,jdbcType=DECIMAL},
		school_salary 		= #{schoolSalary,jdbcType=DECIMAL},
		exam_result 		= #{examResult,jdbcType=VARCHAR},
		job_exam_salary 	= #{jobExamSalary,jdbcType=DECIMAL},
		telephone_allowance = #{telephoneAllowance,jdbcType=DECIMAL},
		traffic_allowance 	= #{trafficAllowance,jdbcType=DECIMAL},
		special_allowance 	= #{specialAllowance,jdbcType=DECIMAL},
		head_allowance 		= #{headAllowance,jdbcType=DECIMAL},
		extra_work_fee 		= #{extraWorkFee,jdbcType=DECIMAL},
		extra_work_date 	= #{extraWorkDate,jdbcType=DECIMAL},
		extra_work_allowance = #{extraWorkAllowance,jdbcType=DECIMAL},
		bonus 				= #{bonus,jdbcType=DECIMAL},
		reissue_fee 		= #{reissueFee,jdbcType=DECIMAL},
		temperature_allowance = #{temperatureAllowance,jdbcType=DECIMAL},
		gross_income 		= #{grossIncome,jdbcType=DECIMAL},
		life_insurance 		= #{lifeInsurance,jdbcType=DECIMAL},
		job_insurance 		= #{jobInsurance,jdbcType=DECIMAL},
		health_insurance 	= #{healthInsurance,jdbcType=DECIMAL},
		house_fund 			= #{houseFund,jdbcType=DECIMAL},
		expense 			= #{expense,jdbcType=DECIMAL},
		net_income 			= #{netIncome,jdbcType=DECIMAL},
		last_change_date 	= #{lastChangeDate,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>