<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangzhixuan.mapper.TrainingMapper">
    <resultMap id="BaseResultMap" type="com.wangzhixuan.model.Training">
        <id     column="id"   property="id"   jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="sex"  property="sex"  jdbcType="INTEGER"/>
        <result column="department_id"  property="departmentId"  jdbcType="INTEGER"/>
        <result column="national_id"    property="nationalId"    jdbcType="INTEGER"/>
        <result column="political_name" property="politicalName" jdbcType="VARCHAR"/>
        <result column="job_id"         property="jobId"         jdbcType="INTEGER"/>
        <result column="training_class" property="trainingClass" jdbcType="VARCHAR"/>
        <result column="description"    property="description"   jdbcType="VARCHAR"/>
        <result column="training_category" property="trainingCategory" jdbcType="VARCHAR"/>
        <result column="start_date"     property="startDate"     jdbcType="DATE"/>
        <result column="end_date"       property="endDate"       jdbcType="DATE"/>
        <result column="sum_time"       property="sumTime"       jdbcType="VARCHAR"/>
        <result column="off_work"       property="offWork"       jdbcType="VARCHAR"/>
        <result column="class_hour"     property="classHour"     jdbcType="VARCHAR"/>
        <result column="training_place" property="trainingPlace" jdbcType="VARCHAR"/>
        <result column="training_school" property="trainingSchool" jdbcType="VARCHAR"/>
        <result column="comment"        property="comment"       jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="trainingVoResultMap" type="com.wangzhixuan.vo.TrainingVo">
        <id     column="id"   property="id"   jdbcType="INTEGER"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="sex"  property="sex"  jdbcType="INTEGER"/>
        <result column="department_id"  property="departmentId"  jdbcType="INTEGER"/>
        <result column="department_name" property="departmentName" jdbcType="VARCHAR"/>
        <result column="national_id"    property="nationalId"    jdbcType="INTEGER"/>
        <result column="national_name"  property="nationalName" jdbcType="VARCHAR"/>
        <result column="political_name" property="politicalName" jdbcType="VARCHAR"/>
        <result column="job_id"         property="jobId"         jdbcType="INTEGER"/>
        <result column="job_name"       property="jobName"       jdbcType="VARCHAR"/>
        <result column="training_class" property="trainingClass" jdbcType="VARCHAR"/>
        <result column="description"    property="description"   jdbcType="VARCHAR"/>
        <result column="training_category" property="trainingCategory" jdbcType="VARCHAR"/>
        <result column="start_date"     property="startDate"     jdbcType="DATE"/>
        <result column="end_date"       property="endDate"       jdbcType="DATE"/>
        <result column="sum_time"       property="sumTime"       jdbcType="VARCHAR"/>
        <result column="off_work"       property="offWork"       jdbcType="VARCHAR"/>
        <result column="class_hour"     property="classHour"     jdbcType="VARCHAR"/>
        <result column="training_place" property="trainingPlace" jdbcType="VARCHAR"/>
        <result column="training_school" property="trainingSchool" jdbcType="VARCHAR"/>
        <result column="comment"        property="comment"       jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, code, name, sex, department_id, national_id, political_name, job_id, training_class,
        description, training_category, start_date, end_date, sum_time, off_work, class_hour,
        training_place, training_school, comment
    </sql>

    <select id="findPeoplePageCondition" resultMap="trainingVoResultMap" parameterType="PageInfo">
        SELECT
          t.id,
          t.code,
          t.name,
          t.sex,
          t.department_id,
          d.name as department_name,
          t.national_id,
          n.name as national_name,
          t.political_name,
          t.job_id,
          j.job_level as job_name,
          t.training_class,
          t.description,
          t.training_category,
          t.start_date,
          t.end_date,
          t.sum_time,
          t.off_work,
          t.class_hour,
          t.training_place,
          t.training_school,
          t.comment
        FROM
          training t
        LEFT JOIN
          dict_department d ON d.id = t.department_id
        LEFT JOIN
          dict_national n ON n.id = t.national_id
        LEFT JOIN
          job j ON j.id = t.job_id
        <where>
            <if test=" condition.name != null and condition.name != '' ">
                and t.name LIKE concat('%',#{condition.name},'%')
            </if>
        </where>
    </select>

    <select id="findPeoplePageCount" resultType="java.lang.Integer" parameterType="PageInfo">
        SELECT count(t.id) count
        FROM
          training t
        LEFT JOIN
          dict_department d ON d.id = t.department_id
        LEFT JOIN
          dict_national n ON n.id = t.national_id
        LEFT JOIN
          job j ON j.id = t.job_id
        <where>
            <if test="condition.name != null and condition.name != ''">
                and t.name LIKE concat('%',#{condition.name},'%')
            </if>
        </where>
    </select>

    <select id="findTrainingById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        SELECT
          <include refid="Base_Column_List" />
        FROM
          training
        WHERE
          id = #{id, jdbcType=INTEGER}
    </select>

    <insert id="insert" parameterType="com.wangzhixuan.model.Training">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO training(
          code, name, sex, department_id, national_id, political_name, job_id, training_class,
          description, training_category, start_date, end_date, sum_time, off_work, class_hour,
          training_place, training_school, comment
        )
        VALUES(
          #{code,         jdbcType=VARCHAR},
          #{name,         jdbcType=VARCHAR},
          #{sex,          jdbcType=INTEGER},
          #{departmentId, jdbcType=INTEGER},
          #{nationalId,   jdbcType=INTEGER},
          #{politicalName, jdbcType=VARCHAR},
          #{jobId,        jdbcType=INTEGER},
          #{trainingClass, jdbcType=VARCHAR},
          #{description,  jdbcType=VARCHAR},
          #{trainingCategory, jdbcType=VARCHAR},
          #{startDate,    jdbcType=DATE},
          #{endDate,      jdbcType=DATE},
          #{sumTime,      jdbcType=VARCHAR},
          #{offWork,      jdbcType=VARCHAR},
          #{classHour,    jdbcType=VARCHAR},
          #{trainingPlace,  jdbcType=VARCHAR},
          #{trainingSchool, jdbcType=VARCHAR},
          #{comment,        jdbcType=VARCHAR}
        )
    </insert>

    <delete id="delete" parameterType="java.lang.Integer">
        DELETE FROM training
        WHERE id = ${id, jdbcType=INTEGER}
    </delete>

    <delete id="batchDeleteByIds" parameterType="java.util.ArrayList">
        DELETE FROM training
        WHERE id IN
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>

    <update id="update" parameterType="com.wangzhixuan.model.Training">
        UPDATE training
        <set>
            <if test="name != null and name != ''">
                name = #{name, jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex, jdbcType=INTEGER},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId, jdbcType=INTEGER},
            </if>
            <if test="nationalId != null">
                national_id = #{nationalId, jdbcType=INTEGER},
            </if>

            political_name = #{politicalName, jdbcType=VARCHAR},

            <if test="jobId != null">
                job_id = #{jobId, jdbcType=INTEGER},
            </if>

            training_class = #{trainingClass, jdbcType=VARCHAR},
            start_date     = #{startDate,     jdbcType=VARCHAR},
            end_date       = #{endDate,       jdbcType=VARCHAR},
            sum_time       = #{sumTime,       jdbcType=VARCHAR},
            off_work       = #{offWork,       jdbcType=VARCHAR},
            class_hour     = #{classHour,     jdbcType=VARCHAR},
            training_place = #{trainingPlace, jdbcType=VARCHAR},
            training_school = #{trainingSchool, jdbcType=VARCHAR},
            comment        = #{comment,       jdbcType=VARCHAR}
        </set>
        where id = #{id, jdbcType=INTEGER}
    </update>

    <insert id="insertByImport" parameterType="java.util.List">
        INSERT INTO training(
          code, name, sex, department_id, national_id, political_name, job_id, training_class,
          description, training_category, start_date, end_date, sum_time, off_work, class_hour,
          training_place, training_school, comment
        )
        VALUES
        <foreach item="item" index="index" collection="list" separator=",">
            (
                #{item.code,         jdbcType=VARCHAR},
                #{item.name,         jdbcType=VARCHAR},
                #{item.sex,          jdbcType=INTEGER},
                #{item.departmentId, jdbcType=INTEGER},
                #{item.nationalId,   jdbcType=INTEGER},
                #{item.politicalName, jdbcType=VARCHAR},
                #{item.jobId,        jdbcType=INTEGER},
                #{item.trainingClass, jdbcType=VARCHAR},
                #{item.description,  jdbcType=VARCHAR},
                #{item.trainingCategory, jdbcType=VARCHAR},
                #{item.startDate,    jdbcType=DATE},
                #{item.endDate,      jdbcType=DATE},
                #{item.sumTime,      jdbcType=VARCHAR},
                #{item.offWork,      jdbcType=VARCHAR},
                #{item.classHour,    jdbcType=VARCHAR},
                #{item.trainingPlace,  jdbcType=VARCHAR},
                #{item.trainingSchool, jdbcType=VARCHAR},
                #{item.comment,        jdbcType=VARCHAR}
            )
        </foreach>
    </insert>

    <select id="selectTrainingVoByIds" resultMap="trainingVoResultMap" parameterType="java.util.ArrayList">
        SELECT
        t.id,
        t.code,
        t.name,
        t.sex,
        t.department_id,
        d.name as department_name,
        t.national_id,
        n.name as national_name,
        t.political_name,
        t.job_id,
        j.job_level as job_name,
        t.training_class,
        t.description,
        t.training_category,
        t.start_date,
        t.end_date,
        t.sum_time,
        t.off_work,
        t.class_hour,
        t.training_place,
        t.training_school,
        t.comment
        FROM
          training t
        LEFT JOIN
          dict_department d ON d.id = t.department_id
        LEFT JOIN
          dict_national n ON n.id = t.national_id
        LEFT JOIN
          job j ON j.id = t.job_id
        WHERE
          t.id IN
          <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
              #{item}
          </foreach>
    </select>
</mapper>