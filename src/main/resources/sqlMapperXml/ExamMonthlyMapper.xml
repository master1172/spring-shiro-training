<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangzhixuan.mapper.ExamMonthlyMapper" >
  <resultMap id="BaseResultMap" type="com.wangzhixuan.model.ExamMonthly" >
    <id     column="id"          property="id"         jdbcType="INTEGER" />
    <result column="people_code" property="peopleCode" jdbcType="VARCHAR" />
    <result column="year"        property="year"       jdbcType="INTEGER" />
    <result column="month"       property="month"      jdbcType="INTEGER" />
    <result column="exam_result" property="examResult" jdbcType="VARCHAR" />
    <result column="exam_operation" property="examOperation" jdbcType="VARCHAR" />
    <result column="exam_date"   property="examDate"   jdbcType="VARCHAR"/>
  </resultMap>

  <resultMap id="ExamMonthlyVoMap" type="com.wangzhixuan.vo.ExamMonthlyVo">
    <id column="id" property="id" jdbcType="INTEGER"/>
    <result column="people_code" property="peopleCode" jdbcType="VARCHAR"/>
    <result column="name" property="name" jdbcType="VARCHAR"/>
    <result column="year" property="year" jdbcType="INTEGER"/>
    <result column="month" property="month" jdbcType="INTEGER"/>
    <result column="exam_result" property="examResult" jdbcType="VARCHAR"/>
    <result column="exam_operation" property="examOperation" jdbcType="VARCHAR"/>
    <result column="exam_date" property="examDate" jdbcType="VARCHAR"/>
  </resultMap>

  <sql id="Base_Column_List" >
    id, people_code, year, month, exam_result, exam_operation, exam_date
  </sql>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
      <include refid="Base_Column_List" />
    from exam_monthly
    where id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exam_monthly
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insert" parameterType="com.wangzhixuan.model.ExamMonthly" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into exam_monthly (people_code, year, month, exam_result, exam_operation, exam_date)
    values (
      #{peopleCode,jdbcType=VARCHAR},
      #{year,jdbcType=INTEGER},
      #{month,jdbcType=INTEGER},
      #{examResult,jdbcType=VARCHAR},
      #{examOperation,jdbcType=VARCHAR},
      #{examDate, jdbcType=VARCHAR}
    )
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.wangzhixuan.model.ExamMonthly" >
    update exam_monthly
    set
      people_code     = #{peopleCode,jdbcType=VARCHAR},
      year            = #{year,jdbcType=INTEGER},
      month           = #{month,jdbcType=INTEGER},
      exam_result     = #{examResult,jdbcType=VARCHAR},
      exam_operation  = #{examOperation,jdbcType=VARCHAR},
      exam_date       = #{examDate, jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="findPageCondition" parameterType="PageInfo" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from exam_monthly t
    <where>
      <if test=" condition.peopleCode != null and condition.peopleCode != ''">
        and t.people_code LIKE concat('%',#{condition.peopleCode},'%')
      </if>
    </where>
    LIMIT #{from}, #{size}
  </select>

  <select id="findPageCount" resultType="java.lang.Integer" parameterType="PageInfo">
    select count(t.id) COUNT
    FROM exam_monthly t
    <where>
      <if test=" condition.peopleCode != null and condition.peopleCode != ''">
        and t.people_code LIKE concat('%',#{condition.peopleCode},'%')
      </if>
    </where>
  </select>

  <select id="findExamMonthlyVoListByCode" resultMap="ExamMonthlyVoMap" parameterType="java.lang.String">
    SELECT
      t.id,
      t.people_code,
      p.name as name,
      t.year,
      t.month,
      t.exam_result,
      t.exam_operation,
      t.exam_date
      FROM
      exam_monthly t
      LEFT JOIN
      people_total p ON t.people_code = p.code
      <where>
        t.people_code = #{code,jdbcType=VARCHAR}
      </where>
  </select>

  <insert id="insertByImport" parameterType="java.util.List">
    insert into exam_monthly (people_code, year, month, exam_result, exam_operation)
    values
    <foreach item="item" index="index" collection="list" separator=",">
      (
      #{item.peopleCode, jdbcType=VARCHAR},
      #{item.year, jdbcType=INTEGER},
      #{item.month, jdbcType=INTEGER},
      #{item.examResult,jdbcType=VARCHAR},
      #{item.examOperation, jdbcType=VARCHAR},
      #{item.examDate, jdbcType=VARCHAR}
      )
    </foreach>
  </insert>

  <select id="findPeopleExamMonthlyResultByCodeAndDate" resultMap="BaseResultMap" parameterType="java.util.Map">
    SELECT
    <include refid="Base_Column_List" />
    FROM exam_monthly t
    WHERE
      t.people_code = #{peopleCode}
      <if test=" startDate != null and startDate != ''">
          <![CDATA[ and t.exam_date >= #{startDate} ]]>
      </if>
      <if test=" endDate != null and endDate != ''">
        <![CDATA[ and t.exam_date <= #{endDate} ]]>
      </if>
      LIMIT 0,1
  </select>
</mapper>