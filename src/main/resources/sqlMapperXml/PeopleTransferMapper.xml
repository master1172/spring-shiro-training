<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangzhixuan.mapper.PeopleTransferMapper">
    <resultMap id="BaseResultMap" type="com.wangzhixuan.model.PeopleTransfer">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="people_code"     property="peopleCode" jdbcType="VARCHAR"/>
        <result column="people_name"     property="peopleName" jdbcType="VARCHAR"/>
        <result column="people_type"     property="peopleType" jdbcType="VARCHAR"/>
        <result column="from_school"     property="fromSchool" jdbcType="VARCHAR"/>
        <result column="to_school"       property="toSchool" jdbcType="VARCHAR"/>
        <result column="transfer_date"   property="transferDate" jdbcType="DATE"/>
        <result column="ref_letter_no"   property="refLetterNo" jdbcType="VARCHAR"/>
        <result column="salary_end_date" property="salaryEndDate" jdbcType="VARCHAR"/>
        <result column="party_transfer_date" property="partyTransferDate" jdbcType="DATE"/>
        <result column="photo" property="photo" jdbcType="VARCHAR"/>
    </resultMap>

    <resultMap id="PeopleTransferVoResultMap" type="com.wangzhixuan.vo.PeopleTransferVo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="people_code" property="peopleCode" jdbcType="VARCHAR"/>
        <result column="people_name" property="peopleName" jdbcType="VARCHAR"/>
        <result column="people_type" property="peopleType" jdbcType="VARCHAR"/>
        <result column="from_school" property="fromSchool" jdbcType="VARCHAR"/>
        <result column="to_school" property="toSchool" jdbcType="VARCHAR"/>
        <result column="transfer_date" property="transferDate" jdbcType="DATE"/>
        <result column="ref_letter_no" property="refLetterNo" jdbcType="VARCHAR"/>
        <result column="salary_end_date" property="salaryEndDate" jdbcType="VARCHAR"/>
        <result column="party_transfer_date" property="partyTransferDate" jdbcType="DATE"/>
        <result column="photo" property="photo" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, people_code, people_name, people_type, from_school, to_school, transfer_date, ref_letter_no, salary_end_date, party_transfer_date, photo
        </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from people_transfer
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findPeopleTransferVoById" resultMap="PeopleTransferVoResultMap" parameterType="java.lang.Long">
        SELECT
          code as people_code,
          name as people_name
        FROM
          people p

        <where>
            t.id = #{id}
        </where>
    </select>

    <select id="findPeopleTransferById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from people_transfer
        where id = #{id}
    </select>

    <select id="findPeopleTransferByName" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List" />
        from people_transfer
        where name LIKE concat('%',#{name},'%')
    </select>

    <select id="findPeopleTransferCodeListByConditions" resultMap="PeopleTransferVoResultMap" parameterType="PageInfo">
        SELECT
          distinct people_code
        FROM
          people_transfer t
        LEFT JOIN
          people p
        ON
          t.people_code = p.code
        <where>
            <if test=" condition.peopleName != null and condition.peopleName != '' ">
                and p.name LIKE concat('%', #{condition.peopleName},'%')
            </if>

            <if test=" condition.fromSchool != null and condition.fromSchool != ''">
                and t.from_school LIKE concat('%',#{condition.fromSchool},'%')
            </if>
            <if test=" condition.toSchool != null and condition.toSchool != ''">
                and t.to_school LIKE concat('%',#{condition.toSchool},'%')
            </if>
            <if test=" condition.transferDateMin != null and condition.transferDateMin != ''">
                <![CDATA[ and t.transfer_date >= #{condition.transferDateMin} ]]>
            </if>
            <if test=" condition.transferDateMax != null and condition.transferDateMax != ''">
                <![CDATA[ and t.transfer_date <= #{condition.transferDateMax} ]]>
            </if>
            <if test=" condition.partyTransferDateMin != null and condition.partyTransferDateMin != ''">
                <![CDATA[ and t.party_transfer_date >= #{condition.party_transferDateMin} ]]>
            </if>
            <if test=" condition.partyTransferDateMax != null and condition.partyTransferDateMax != ''">
                <![CDATA[ and t.party_transfer_date <= #{condition.partyTransferDateMax} ]]>
            </if>
        </where>
    </select>

    <select id="findPeopleTransferPageCondition" resultMap="PeopleTransferVoResultMap" parameterType="PageInfo">
        SELECT
            id,
            people_code,
            people_name,
            from_school,
            to_school,
            transfer_date
        FROM
          (SELECT * from people_transfer order by transfer_date desc) as b
        <where>
            people_code in
            <foreach item="item" index="index" collection="condition.peopleCodeList" open="(" separator="," close=")">
                #{item}
            </foreach>
        </where>
        group by people_code
        LIMIT #{from}, #{size}
    </select>

    <select id="findPeopleTransferListPageCondition" resultMap="PeopleTransferVoResultMap" parameterType="PageInfo">
        SELECT
          t.id,
          t.people_code,
          t.people_name,
          t.people_type,
          t.from_school,
          t.to_school,
          t.transfer_date,
          t.ref_letter_no,
          t.salary_end_date,
          t.party_transfer_date
        FROM
          people_transfer t
        <where>
            <if test=" condition.peopleCode != null and condition.peopleCode != ''">
                and t.people_code LIKE concat('%', #{condition.peopleCode},'%')
            </if>
        </where>
        LIMIT #{from},#{size}
    </select>

    <select id="findPeopleTransferListPageCount" resultType="java.lang.Integer" parameterType="PageInfo">
        select count(t.id) count
        FROM
          people_transfer t
        <where>
            <if test=" condition.peopleCode != null and condition.peopleCode != ''">
                and t.people_code LIKE concat('%', #{condition.peopleCode},'%')
            </if>
        </where>
    </select>

    <select id="findPeopleTransferListByCode" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from people_transfer
        where people_code = #{peopleCode}
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete from people_transfer
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.wangzhixuan.model.PeopleTransfer">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into people_transfer (people_code, people_name, people_type, from_school, to_school, transfer_date, ref_letter_no, salary_end_date, party_transfer_date, photo)
        values (
        #{peopleCode,jdbcType=VARCHAR},
        #{peopleName,jdbcType=VARCHAR},
        #{peopleType,jdbcType=VARCHAR},
        #{fromSchool,jdbcType=VARCHAR},
        #{toSchool,jdbcType=VARCHAR},
        #{transferDate,jdbcType=DATE},
        #{refLetterNo,jdbcType=VARCHAR},
        #{salaryEndDate, jdbcType=VARCHAR},
        #{partyTransferDate,jdbcType=DATE},
        #{photo, jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertByImport" parameterType="java.util.List">
        insert into people_transfer (people_code, people_type, from_school, to_school, transfer_date, ref_letter_no, salary_end_date, party_transfer_date, photo)
        values
        <foreach item="item" index="index" collection="list" separator=",">
            (
            #{item.peopleCode,jdbcType=VARCHAR},
            #{item.peopleType,jdbcType=VARCHAR},
            #{item.fromSchool,jdbcType=VARCHAR},
            #{item.toSchool,jdbcType=VARCHAR},
            #{item.transferDate,jdbcType=DATE},
            #{item.refLetterNo,jdbcType=VARCHAR},
            #{item.salaryEndDate, jdbcType=VARCHAR},
            #{item.partyTransferDate,jdbcType=DATE},
            #{item.photo, jdbcType=VARCHAR}
            )
        </foreach>
    </insert>
    <update id="updatePeopleTransfer" parameterType="com.wangzhixuan.model.PeopleTransfer">
        update people_transfer
        <set>
            <if test="peopleCode != null">
                people_code = #{peopleCode,jdbcType=VARCHAR},
            </if>
            <if test="peopleType != null">
                people_type = #{peopleType,jdbcType=VARCHAR},
            </if>
            <if test="fromSchool != null">
                from_school = #{fromSchool,jdbcType=VARCHAR},
            </if>
            <if test="toSchool != null">
                to_school = #{toSchool,jdbcType=VARCHAR},
            </if>
            <if test="transferDate != null">
                transfer_date = #{transferDate,jdbcType=DATE},
            </if>
            <if test="refLetterNo != null">
                ref_letter_no = #{refLetterNo,jdbcType=VARCHAR},
            </if>
            <if test="salaryEndDate != null">
                salary_end_date = #{salaryEndDate, jdbcType=VARCHAR},
            </if>
            <if test="partyTransferDate != null">
                party_transfer_date = #{partyTransferDate,jdbcType=DATE},
            </if>
            <if test="photo != null">
                photo = #{photo,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectPeopleTransferByIds" resultMap="BaseResultMap" parameterType="java.util.ArrayList">
        SELECT
        t.id,
        t.people_code,
        t.people_name,
        t.people_type,
        t.from_school,
        t.to_school,
        t.transfer_date,
        t.ref_letter_no,
        t.salary_end_date,
        t.party_transfer_date,
        t.photo
        FROM
        people_transfer t
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectPeopleTransferByCodeList" resultMap="BaseResultMap" parameterType="java.util.ArrayList">
        select
          <include refid="Base_Column_List"/>
        from people_transfer
        where people_code in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectPeopleTransferVoByIds" resultMap="PeopleTransferVoResultMap" parameterType="java.util.ArrayList">
        SELECT
        t.id,
        t.people_code,
        t.people_name,
        t.people_type,
        t.from_school,
        t.to_school,
        t.transfer_date,
        t.ref_letter_no,
        t.salary_end_date,
        t.party_transfer_date,
        t.photo
        FROM
        people_transfer t
        where t.id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>

