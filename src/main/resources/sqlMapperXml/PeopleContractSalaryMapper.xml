<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangzhixuan.mapper.PeopleContractSalaryMapper">
	<resultMap id="BaseResultMap" type="com.wangzhixuan.model.PeopleContractSalary">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="people_code" property="peopleCode" jdbcType="VARCHAR" />
		<result column="job_id" property="jobId" jdbcType="INTEGER" />
		<result column="job_salary" property="jobSalary" jdbcType="DECIMAL" />
		<result column="school_salary" property="schoolSalary" jdbcType="DECIMAL" />
		<result column="exam_result" property="examResult" jdbcType="VARCHAR" />
		<result column="job_exam_salary" property="jobExamSalary" jdbcType="DECIMAL" />
		<result column="telephone_allowance" property="telephoneAllowance" jdbcType="DECIMAL" />
		<result column="traffic_allowance" property="trafficAllowance" jdbcType="DECIMAL" />
		<result column="special_allowance" property="specialAllowance" jdbcType="DECIMAL" />
		<result column="head_allowance" property="headAllowance" jdbcType="DECIMAL" />
		<result column="on_duty_fee" property="onDutyFee" jdbcType="DECIMAL" />
		<result column="on_duty_date" property="onDutyDate" jdbcType="DECIMAL" />
		<result column="on_duty_fee_total" property="onDutyFeeTotal" jdbcType="DECIMAL" />
		<result column="bonus" property="bonus" jdbcType="DECIMAL" />
		<result column="reissue_fee" property="reissueFee" jdbcType="DECIMAL" />
		<result column="temperature_allowance" property="temperatureAllowance" jdbcType="DECIMAL" />
		<result column="gross_income" property="grossIncome" jdbcType="DECIMAL" />
		<result column="life_insurance" property="lifeInsurance" jdbcType="DECIMAL" />
		<result column="job_insurance" property="jobInsurance" jdbcType="DECIMAL" />
		<result column="health_insurance" property="healthInsurance" jdbcType="DECIMAL" />
		<result column="house_fund" property="houseFund" jdbcType="DECIMAL" />
		<result column="expense" property="expense" jdbcType="DECIMAL" />
		<result column="net_income" property="netIncome" jdbcType="DECIMAL" />
		<result column="pay_date" property="payDate" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="peopleContractSalaryVoResultMap" type="com.wangzhixuan.vo.PeopleContractSalaryVo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="people_code" 	property="peopleCode" jdbcType="VARCHAR" />
		<result column="people_name" 	property="peopleName" jdbcType="VARCHAR" />
		<result column="job_id" 		property="jobId" jdbcType="INTEGER" />
		<result column="job_salary" 	property="jobSalary" jdbcType="DECIMAL" />
        <result column="job_category"   jdbcType="VARCHAR" property="jobCategory"/>
        <result column="job_level"      jdbcType="VARCHAR" property="jobLevel" />
		<result column="school_salary"   property="schoolSalary" jdbcType="DECIMAL" />
		<result column="exam_result"     property="examResult" jdbcType="VARCHAR" />
		<result column="job_exam_salary" property="jobExamSalary" jdbcType="DECIMAL" />
		<result column="telephone_allowance" property="telephoneAllowance" jdbcType="DECIMAL" />
		<result column="traffic_allowance"   property="trafficAllowance" jdbcType="DECIMAL" />
		<result column="special_allowance"   property="specialAllowance" jdbcType="DECIMAL" />
		<result column="head_allowance"      property="headAllowance" jdbcType="DECIMAL" />
		<result column="on_duty_fee"         property="onDutyFee" jdbcType="DECIMAL" />
		<result column="on_duty_date"        property="onDutyDate" jdbcType="DECIMAL" />
		<result column="on_duty_fee_total"   property="onDutyFeeTotal" jdbcType="DECIMAL" />
		<result column="bonus"               property="bonus" jdbcType="DECIMAL" />
		<result column="reissue_fee"         property="reissueFee" jdbcType="DECIMAL" />
		<result column="temperature_allowance" property="temperatureAllowance" jdbcType="DECIMAL" />
		<result column="gross_income" property="grossIncome" jdbcType="DECIMAL" />
		<result column="life_insurance" property="lifeInsurance" jdbcType="DECIMAL" />
		<result column="job_insurance" property="jobInsurance" jdbcType="DECIMAL" />
		<result column="health_insurance" property="healthInsurance" jdbcType="DECIMAL" />
		<result column="house_fund" property="houseFund" jdbcType="DECIMAL" />
		<result column="expense" property="expense" jdbcType="DECIMAL" />
		<result column="net_income" property="netIncome" jdbcType="DECIMAL" />
		<result column="pay_date" property="payDate" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="peopleContractSalaryBaseMap" type="com.wangzhixuan.model.PeopleContractSalaryBase">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="code" property="peopleCode" jdbcType="VARCHAR" />
		<result column="name" property="peopleName" jdbcType="VARCHAR" />
		<result column="job_id" property="jobId" jdbcType="INTEGER" />
		<result column="job_salary" property="jobSalary" jdbcType="DECIMAL" />
		<result column="school_salary" property="schoolSalary" jdbcType="DECIMAL" />
		<result column="job_exam_salary" property="jobExamSalary" jdbcType="DECIMAL" />
		<result column="telephone_allowance" property="telephoneAllowance" jdbcType="DECIMAL" />
		<result column="traffic_allowance" property="trafficAllowance" jdbcType="DECIMAL" />
		<result column="special_allowance" property="specialAllowance" jdbcType="DECIMAL" />
		<result column="head_allowance" property="headAllowance" jdbcType="DECIMAL" />
		<result column="on_duty_fee" property="onDutyFee" jdbcType="DECIMAL" />
		<result column="bonus" property="bonus" jdbcType="DECIMAL" />
		<result column="reissue_fee" property="reissueFee" jdbcType="DECIMAL" />
		<result column="temperature_allowance" property="temperatureAllowance" jdbcType="DECIMAL" />
		<result column="life_insurance" property="lifeInsurance" jdbcType="DECIMAL" />
		<result column="job_insurance" property="jobInsurance" jdbcType="DECIMAL" />
		<result column="health_insurance" property="healthInsurance" jdbcType="DECIMAL" />
		<result column="house_fund" property="houseFund" jdbcType="DECIMAL" />
		<result column="last_update_date" property="lastUpdateDate" jdbcType="VARCHAR" />
	</resultMap>

	<resultMap id="peopleContractSalaryBaseVoMap" type="com.wangzhixuan.vo.PeopleContractSalaryBaseVo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="code" property="peopleCode" jdbcType="VARCHAR" />
		<result column="name" property="peopleName" jdbcType="VARCHAR" />
		<result column="job_id" property="jobId" jdbcType="INTEGER" />
		<result column="job_salary" property="jobSalary" jdbcType="DECIMAL" />
		<result column="job_level"  property="jobLevel"  jdbcType="VARCHAR" />
		<result column="school_salary" property="schoolSalary" jdbcType="DECIMAL" />
		<result column="job_exam_salary" property="jobExamSalary" jdbcType="DECIMAL" />
		<result column="telephone_allowance" property="telephoneAllowance" jdbcType="DECIMAL" />
		<result column="traffic_allowance" property="trafficAllowance" jdbcType="DECIMAL" />
		<result column="special_allowance" property="specialAllowance" jdbcType="DECIMAL" />
		<result column="head_allowance" property="headAllowance" jdbcType="DECIMAL" />
		<result column="on_duty_fee" property="onDutyFee" jdbcType="DECIMAL" />
		<result column="bonus" property="bonus" jdbcType="DECIMAL" />
		<result column="reissue_fee" property="reissueFee" jdbcType="DECIMAL" />
		<result column="temperature_allowance" property="temperatureAllowance" jdbcType="DECIMAL" />
		<result column="life_insurance" property="lifeInsurance" jdbcType="DECIMAL" />
		<result column="job_insurance" property="jobInsurance" jdbcType="DECIMAL" />
		<result column="health_insurance" property="healthInsurance" jdbcType="DECIMAL" />
		<result column="house_fund" property="houseFund" jdbcType="DECIMAL" />
		<result column="last_update_date" property="lastUpdateDate" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, people_code, job_id, job_salary, school_salary, exam_result,
		job_exam_salary, telephone_allowance, traffic_allowance, special_allowance, head_allowance, on_duty_fee,
		on_duty_date, on_duty_fee_total, bonus, reissue_fee, temperature_allowance,
		gross_income, life_insurance, job_insurance, health_insurance, house_fund, expense, net_income, pay_date
	</sql>

	<sql id="PeopleContractSalaryBase_Column_List">
		id,code,name,job_id, job_salary,school_salary,job_exam_salary,telephone_allowance, traffic_allowance,
		special_allowance, head_allowance, on_duty_fee, bonus, reissue_fee, temperature_allowance,life_insurance,
		job_insurance, health_insurance, house_fund,last_update_date
	</sql>

	<select id="findPeopleContractSalaryBasePageCondition" resultMap="peopleContractSalaryBaseVoMap" parameterType="PageInfo">
		SELECT
			t.id,
			t.code,
			t.name,
			t.job_id,
			t.job_salary,
			j.job_level as job_level,
			t.school_salary,
			t.job_exam_salary,
			t.telephone_allowance,
			t.traffic_allowance,
			t.special_allowance,
			t.head_allowance,
			t.on_duty_fee,
			t.bonus,
			t.reissue_fee,
			t.temperature_allowance,
			t.life_insurance,
			t.job_insurance,
			t.health_insurance,
			t.house_fund,
			t.last_update_date
		FROM
			people_total t
		LEFT JOIN
			job j ON j.id = t.job_id
		<where>
			<if test=" condition.name != null and condition.name != ''">
				and t.name LIKE concat('%',#{condition.name},'%')
			</if>
			<if test=" condition.sex != null">
				and t.sex = #{condition.sex}
			</if>
			<if test=" condition.birthdayMin != null and condition.birthdayMin != ''">
				<![CDATA[ and t.birthday >= #{condition.birthdayMin} ]]>
			</if>
			<if test=" condition.birthdayMax != null and condition.birthdayMax != ''">
				<![CDATA[ and t.birthday <= #{condition.birthdayMax} ]]>
			</if>
			<if test=" condition.jobIdList != null">
				and t.job_id in
				<foreach item="item" index="index" collection="condition.jobIdList" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test=" condition.status != null">
				and t.status = 4
			</if>
		</where>
		LIMIT #{from}, #{size}
	</select>

	<select id="findPeopleContractSalaryBasePageCount" resultType="java.lang.Integer" parameterType="PageInfo">
		select count(t.id) count
		FROM people_total t
		<where>
			<if test=" condition.name != null and condition.name != ''">
				and t.name LIKE concat('%',#{condition.name},'%')
			</if>
			<if test=" condition.sex != null">
				and t.sex = #{condition.sex}
			</if>
			<if test=" condition.birthdayMin != null and condition.birthdayMin != ''">
				<![CDATA[ and t.birthday >= #{condition.birthdayMin} ]]>
			</if>
			<if test=" condition.birthdayMax != null and condition.birthdayMax != ''">
				<![CDATA[ and t.birthday <= #{condition.birthdayMax} ]]>
			</if>
			<if test=" condition.jobIdList != null">
				and t.job_id in
				<foreach item="item" index="index" collection="condition.jobIdList" open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			<if test=" condition.status != null">
				and t.status = 4
			</if>
		</where>
	</select>

	<update id="updateSalaryBase" parameterType="com.wangzhixuan.model.PeopleContractSalaryBase">
		update people_total
		SET
			<if test="jobId != null">
				job_id 				= #{jobId,jdbcType=INTEGER},
			</if>
			<if test=" jobSalary != null">
				job_salary 			= #{jobSalary,jdbcType=DECIMAL},
			</if>
			<if test=" schoolSalary != null">
				school_salary 		= #{schoolSalary,jdbcType=DECIMAL},
			</if>
			<if test=" jobExamSalary != null">
				job_exam_salary 	= #{jobExamSalary,jdbcType=DECIMAL},
			</if>
			<if test=" telephoneAllowance != null">
				telephone_allowance = #{telephoneAllowance,jdbcType=DECIMAL},
			</if>
			<if test=" trafficAllowance != null">
				traffic_allowance 	= #{trafficAllowance,jdbcType=DECIMAL},
			</if>
			<if test="specialAllowance != null">
				special_allowance 	= #{specialAllowance,jdbcType=DECIMAL},
			</if>
			<if test="headAllowance != null">
				head_allowance 		= #{headAllowance,jdbcType=DECIMAL},
			</if>
			<if test="onDutyFee != null">
				on_duty_fee = #{onDutyFee,jdbcType=DECIMAL},
			</if>
			<if test="bonus != null">
				bonus 				= #{bonus,jdbcType=DECIMAL},
			</if>
			<if test="reissueFee != null">
				reissue_fee = #{reissueFee, jdbcType=DECIMAL},
			</if>
			<if test="temperatureAllowance != null">
				temperature_allowance = #{temperatureAllowance, jdbcType=DECIMAL},
			</if>

			<if test="lifeInsurance != null">
				life_insurance = #{lifeInsurance, jdbcType=DECIMAL},
			</if>
			<if test="jobInsurance != null">
				job_insurance = #{jobInsurance, jdbcType=DECIMAL},
			</if>
			<if test="healthInsurance != null">
				health_insurance = #{healthInsurance, jdbcType=DECIMAL},
			</if>
			<if test="houseFund != null">
				house_fund = #{houseFund, jdbcType=DECIMAL},
			</if>
			<if test="lastUpdateDate != null">
				last_update_date = #{lastUpdateDate, jdbcType=VARCHAR}
			</if>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="findPeopleContractSalaryPageCondition" resultMap="peopleContractSalaryVoResultMap" parameterType="PageInfo">
		SELECT
		t.id,
		t.people_code,
		p.name as people_name,
		t.job_id,
		t.job_salary,
		j.job_category as job_category,
		j.job_level as job_level,
		t.school_salary,
		t.exam_result,
		t.job_exam_salary,
		t.telephone_allowance,
		t.traffic_allowance,
		t.special_allowance,
		t.head_allowance,
		t.on_duty_fee,
		t.on_duty_date,
		t.on_duty_fee_total,
		t.bonus,
		t.reissue_fee,
		t.temperature_allowance,
		t.gross_income,
		t.life_insurance,
		t.job_insurance,
		t.health_insurance,
		t.house_fund,
		t.expense,
		t.net_income,
		t.pay_date
		FROM
		people_contract_salary t LEFT JOIN people_total p
		ON t.people_code = p.code
		LEFT JOIN job j ON
		t.job_id = j.id
		<where>
			<if test=" condition.peopleCode != null and condition.peopleCode != ''">
				and t.people_code LIKE
				concat('%',#{condition.peopleCode},'%')
			</if>
			<if test=" condition.peopleName != null and condition.peopleName != '' ">
				and p.name LIKE concat('%',#{condition.peopleName},'%')
			</if>
		</where>
		ORDER BY
		t.pay_date desc
		LIMIT #{from}, #{size}
	</select>

	<select id="findPeopleContractSalaryPageCount" resultType="java.lang.Integer" parameterType="PageInfo">
		select count(t.id) count
		FROM
			people_contract_salary t
		LEFT JOIN
			people_total p ON t.people_code = p.code
		LEFT JOIN
			job j ON t.job_id = j.id
		<where>
			<if test=" condition.peopleCode != null and condition.peopleCode != ''">
				and t.people_code LIKE
				concat('%',#{condition.peopleCode},'%')
			</if>
			<if test=" condition.peopleName != null and condition.peopleName != '' ">
				and p.name LIKE concat('%',#{condition.peopleName},'%')
			</if>
		</where>
	</select>

	<select id="findPeopleContractSalaryBaseById" resultMap="peopleContractSalaryBaseMap" parameterType="java.lang.Integer">
		SELECT
		<include refid="PeopleContractSalaryBase_Column_List"/>
		from people_total
		where id=#{id, jdbcType=INTEGER}
	</select>

	<select id="findPeopleContractSalaryBaseByCode" resultMap="peopleContractSalaryBaseMap" parameterType="java.lang.String">
		SELECT
		<include refid="PeopleContractSalaryBase_Column_List"/>
		from people_total
		where code=#{peopleCode, jdbcType=VARCHAR}
	</select>

	<insert id="insert" parameterType="java.util.List">
		insert into people_contract_salary (
			people_code, job_id, job_salary, school_salary, exam_result, job_exam_salary, telephone_allowance, traffic_allowance,
			special_allowance, head_allowance, on_duty_fee, on_duty_date, on_duty_fee_total, bonus, reissue_fee,
			temperature_allowance, gross_income, life_insurance, job_insurance, health_insurance, house_fund, expense, net_income, pay_date
		)
		VALUES
		(
			#{peopleCode,jdbcType=VARCHAR},
			#{jobId,jdbcType=INTEGER},
			#{jobSalary,jdbcType=DECIMAL},
			#{schoolSalary,jdbcType=DECIMAL},
			#{examResult,jdbcType=VARCHAR},
			#{jobExamSalary,jdbcType=DECIMAL},
			#{telephoneAllowance,jdbcType=DECIMAL},
			#{trafficAllowance,jdbcType=DECIMAL},
			#{specialAllowance,jdbcType=DECIMAL},
			#{headAllowance,jdbcType=DECIMAL},
			#{onDutyFee,jdbcType=DECIMAL},
			#{onDutyDate,jdbcType=DECIMAL},
			#{onDutyFeeTotal,jdbcType=DECIMAL},
			#{bonus,jdbcType=DECIMAL},
			#{reissueFee,jdbcType=DECIMAL},
			#{temperatureAllowance,jdbcType=DECIMAL},
			#{grossIncome,jdbcType=DECIMAL},
			#{lifeInsurance,jdbcType=DECIMAL},
			#{jobInsurance,jdbcType=DECIMAL},
			#{healthInsurance,jdbcType=DECIMAL},
			#{houseFund,jdbcType=DECIMAL},
			#{expense,jdbcType=DECIMAL},
			#{netIncome,jdbcType=DECIMAL},
			#{payDate,jdbcType=VARCHAR}
		)
	</insert>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from
		people_contract_salary
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<select id="findPeopleContractSalaryById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		people_contract_salary
		where id = #{id, jdbcType=INTEGER}
	</select>

	<update id="updateByPrimaryKey" parameterType="com.wangzhixuan.model.PeopleContractSalary">
		update
		people_contract_salary
		set people_code =
		#{peopleCode,jdbcType=VARCHAR},
		job_id = #{jobId,jdbcType=INTEGER},
		job_salary =
		#{jobSalary,jdbcType=DECIMAL},
		school_salary =
		#{schoolSalary,jdbcType=DECIMAL},
		exam_result =
		#{examResult,jdbcType=VARCHAR},
		job_exam_salary =
		#{jobExamSalary,jdbcType=DECIMAL},
		telephone_allowance =
		#{telephoneAllowance,jdbcType=DECIMAL},
		traffic_allowance =
		#{trafficAllowance,jdbcType=DECIMAL},
		special_allowance =
		#{specialAllowance,jdbcType=DECIMAL},
		head_allowance =
		#{headAllowance,jdbcType=DECIMAL},
		on_duty_fee =
		#{onDutyFee,jdbcType=DECIMAL},
		on_duty_date =
		#{onDutyDate,jdbcType=DECIMAL},
		on_duty_fee_total =
		#{onDutyFeeTotal,jdbcType=DECIMAL},
		bonus =
		#{bonus,jdbcType=DECIMAL},
		reissue_fee =
		#{reissueFee,jdbcType=DECIMAL},
		temperature_allowance =
		#{temperatureAllowance,jdbcType=DECIMAL},
		gross_income =
		#{grossIncome,jdbcType=DECIMAL},
		life_insurance =
		#{lifeInsurance,jdbcType=DECIMAL},
		job_insurance =
		#{jobInsurance,jdbcType=DECIMAL},
		health_insurance =
		#{healthInsurance,jdbcType=DECIMAL},
		house_fund =
		#{houseFund,jdbcType=DECIMAL},
		expense = #{expense,jdbcType=DECIMAL},
		net_income = #{netIncome,jdbcType=DECIMAL},
		pay_date =
		#{payDate,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="findPeopleContractSalaryVoListByCode" resultMap="peopleContractSalaryVoResultMap" parameterType="java.lang.String">
		SELECT
		t.id,
		t.people_code,
		p.name as people_name,
		t.job_id,
		j.job_category as job_category,
		j.job_level as job_level,
		t.job_salary,
		t.school_salary,
		t.exam_result,
		t.job_exam_salary,
		t.telephone_allowance,
		t.traffic_allowance,
		t.special_allowance,
		t.head_allowance,
		t.on_duty_fee,
		t.on_duty_date,
		t.on_duty_fee_total,
		t.bonus,
		t.reissue_fee,
		t.temperature_allowance,
		t.gross_income,
		t.life_insurance,
		t.job_insurance,
		t.health_insurance,
		t.house_fund,
		t.expense,
		t.net_income,
		t.pay_date
		FROM people_contract_salary t
		LEFT JOIN people_total p
		ON t.people_code = p.code
		LEFT JOIN job j
		ON j.id = t.job_id
		where t.people_code = #{peopleCode}
	</select>

	<insert id="insertByImport" parameterType="java.util.List">
		insert into people_contract_salary (
			people_code, job_id, job_salary, school_salary, exam_result, job_exam_salary, telephone_allowance, traffic_allowance,
			special_allowance, head_allowance, on_duty_fee, on_duty_date, on_duty_fee_total, bonus, reissue_fee,
			temperature_allowance, gross_income, life_insurance, job_insurance, health_insurance, house_fund, expense, net_income, pay_date
		)
		VALUES
		<foreach item="item" index="index" collection="list" separator=",">
			(
			#{item.peopleCode,jdbcType=VARCHAR},
			#{item.jobId,jdbcType=INTEGER},
			#{item.jobSalary,jdbcType=DECIMAL},
			#{item.schoolSalary,jdbcType=DECIMAL},
			#{item.examResult,jdbcType=VARCHAR},
			#{item.jobExamSalary,jdbcType=DECIMAL},
			#{item.telephoneAllowance,jdbcType=DECIMAL},
			#{item.trafficAllowance,jdbcType=DECIMAL},
			#{item.specialAllowance,jdbcType=DECIMAL},
			#{item.headAllowance,jdbcType=DECIMAL},
			#{item.onDutyFee,jdbcType=DECIMAL},
			#{item.onDutyDate,jdbcType=DECIMAL},
			#{item.onDutyFeeTotal,jdbcType=DECIMAL},
			#{item.bonus,jdbcType=DECIMAL},
			#{item.reissueFee,jdbcType=DECIMAL},
			#{item.temperatureAllowance,jdbcType=DECIMAL},
			#{item.grossIncome,jdbcType=DECIMAL},
			#{item.lifeInsurance,jdbcType=DECIMAL},
			#{item.jobInsurance,jdbcType=DECIMAL},
			#{item.healthInsurance,jdbcType=DECIMAL},
			#{item.houseFund,jdbcType=DECIMAL},
			#{item.expense,jdbcType=DECIMAL},
			#{item.netIncome,jdbcType=DECIMAL},
			#{item.payDate,jdbcType=VARCHAR}
			)
		</foreach>
	</insert>

</mapper>