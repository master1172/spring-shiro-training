<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangzhixuan.mapper.PeopleRetireSalaryMapper">
	<resultMap id="BaseResultMap" type="com.wangzhixuan.model.PeopleRetireSalary">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="people_code" property="peopleCode" jdbcType="VARCHAR" />
		<result column="base_salary" property="baseSalary" jdbcType="DECIMAL" />
		<result column="rank_id" property="rankId" jdbcType="INTEGER" />
		<result column="extra_allowance" property="extraAllowance" jdbcType="DECIMAL" />
		<result column="rent_allowance" property="rentAllowance" jdbcType="DECIMAL" />
		<result column="retire_allowance" property="retireAllowance" jdbcType="DECIMAL" />
		<result column="retire_fee_increase" property="retireFeeIncrease" jdbcType="DECIMAL" />
		<result column="food_allowance" property="foodAllowance" jdbcType="DECIMAL" />
		<result column="health_allowance" property="healthAllowance" jdbcType="DECIMAL" />
		<result column="medicare_fee" property="medicareFee" jdbcType="DECIMAL" />
		<result column="property_allowance" property="propertyAllowance" jdbcType="DECIMAL" />
		<result column="heating_fee" property="heatingFee" jdbcType="DECIMAL" />
		<result column="handicap_allowance" property="handicapAllowance" jdbcType="DECIMAL" />
		<result column="gross_income" property="grossIncome" jdbcType="DECIMAL" />
		<result column="expense" property="expense" jdbcType="DECIMAL" />
		<result column="rent_fee" property="rentFee" jdbcType="DECIMAL" />
		<result column="net_income" property="netIncome" jdbcType="DECIMAL" />
		<result column="pay_date" property="payDate" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="peopleRetireSalaryVoResultMap" type="com.wangzhixuan.vo.PeopleRetireSalaryVo">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="people_code" property="peopleCode" jdbcType="VARCHAR" />
		<result column="people_name" property="peopleName" jdbcType="VARCHAR" />
		<result column="base_salary" property="baseSalary" jdbcType="DECIMAL" />
		<result column="rank_id" property="rankId" jdbcType="INTEGER" />
		<result column="extra_allowance" property="extraAllowance" jdbcType="DECIMAL" />
		<result column="rent_allowance" property="rentAllowance" jdbcType="DECIMAL" />
		<result column="retire_allowance" property="retireAllowance" jdbcType="DECIMAL" />
		<result column="retire_fee_increase" property="retireFeeIncrease" jdbcType="DECIMAL" />
		<result column="food_allowance" property="foodAllowance" jdbcType="DECIMAL" />
		<result column="health_allowance" property="healthAllowance" jdbcType="DECIMAL" />
		<result column="medicare_fee" property="medicareFee" jdbcType="DECIMAL" />
		<result column="property_allowance" property="propertyAllowance" jdbcType="DECIMAL" />
		<result column="heating_fee" property="heatingFee" jdbcType="DECIMAL" />
		<result column="handicap_allowance" property="handicapAllowance" jdbcType="DECIMAL" />
		<result column="gross_income" property="grossIncome" jdbcType="DECIMAL" />
		<result column="expense" property="expense" jdbcType="DECIMAL" />
		<result column="rent_fee" property="rentFee" jdbcType="DECIMAL" />
		<result column="net_income" property="netIncome" jdbcType="DECIMAL" />
		<result column="pay_date" property="payDate" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		id, people_code, base_salary, rank_id, extra_allowance, rent_allowance, retire_allowance,
		retire_fee_increase, food_allowance, health_allowance, medicare_fee, property_allowance,
		heating_fee, handicap_allowance, gross_income, expense, rent_fee, net_income, pay_date
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from people_retire_salary
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="findPeopleRetireSalaryVoById" resultMap="peopleRetireSalaryVoResultMap" parameterType="java.lang.Long">
		SELECT
		t.id,
		t.people_code,
		p.name as people_name,
		t.base_salary,
		t.rank_id,
		t.extra_allowance,
		t.rent_allowance,
		t.retire_allowance,
		t.retire_fee_increase,
		t.food_allowance,
		t.health_allowance,
		t.medicare_fee,
		t.property_allowance,
		t.heating_fee,
		t.handicap_allowance,
		t.gross_income,
		t.expense,
		t.rent_fee,
		t.net_income,
		t.pay_date
		FROM
			people_retire_salary t LEFT JOIN people_retire p
		ON t.people_code = p.code
			where t.id = #{id,jdbcType=INTEGER}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from people_retire_salary
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.wangzhixuan.model.PeopleRetireSalary">
		insert into people_retire_salary (
			people_code, base_salary, rank_id, extra_allowance, rent_allowance, retire_allowance,
			retire_fee_increase, food_allowance, health_allowance, medicare_fee, property_allowance,
			heating_fee, handicap_allowance, gross_income, expense, rent_fee, net_income, pay_date
		)
		values (
			#{peopleCode,jdbcType=VARCHAR},
			#{baseSalary,jdbcType=DECIMAL},
			#{rankId,jdbcType=INTEGER},
			#{extraAllowance,jdbcType=DECIMAL},
			#{rentAllowance,jdbcType=DECIMAL},
			#{retireAllowance,jdbcType=DECIMAL},
			#{retireFeeIncrease,jdbcType=DECIMAL},
			#{foodAllowance,jdbcType=DECIMAL},
			#{healthAllowance,jdbcType=DECIMAL},
			#{medicareFee,jdbcType=DECIMAL},
			#{propertyAllowance,jdbcType=DECIMAL},
			#{heatingFee,jdbcType=DECIMAL},
			#{handicapAllowance,jdbcType=DECIMAL},
			#{grossIncome,jdbcType=DECIMAL},
			#{expense,jdbcType=DECIMAL},
			#{rentFee,jdbcType=DECIMAL},
			#{netIncome,jdbcType=DECIMAL},
			#{payDate,jdbcType=VARCHAR}
		)
	</insert>

	<update id="updateByPrimaryKey" parameterType="com.wangzhixuan.model.PeopleRetireSalary">
		update people_retire_salary
		set
			people_code = #{peopleCode,jdbcType=VARCHAR},
			base_salary = #{baseSalary,jdbcType=DECIMAL},
			rank_id 	= #{rankId,jdbcType=INTEGER},
			extra_allowance = #{extraAllowance,jdbcType=DECIMAL},
			rent_allowance = #{rentAllowance,jdbcType=DECIMAL},
			retire_allowance = #{retireAllowance,jdbcType=DECIMAL},
			retire_fee_increase = #{retireFeeIncrease,jdbcType=DECIMAL},
			food_allowance = #{foodAllowance,jdbcType=DECIMAL},
			health_allowance = #{healthAllowance,jdbcType=DECIMAL},
			medicare_fee = #{medicareFee,jdbcType=DECIMAL},
			property_allowance = #{propertyAllowance,jdbcType=DECIMAL},
			heating_fee = #{heatingFee,jdbcType=DECIMAL},
			handicap_allowance = #{handicapAllowance,jdbcType=DECIMAL},
			gross_income = #{grossIncome,jdbcType=DECIMAL},
			expense = #{expense,jdbcType=DECIMAL},
			rent_fee = #{rentFee,jdbcType=DECIMAL},
			net_income = #{netIncome,jdbcType=DECIMAL},
			pay_date = #{payDate,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<select id="findPeopleRetireSalaryPageCount" resultType="java.lang.Integer" parameterType="PageInfo">
		select count(t.id) count
		FROM
		people_retire_salary t
		LEFT JOIN
		people_retire p ON t.people_code = p.code
		<where>
			<if test=" condition.peopleCode != null and condition.peopleCode != ''">
				and t.people_code LIKE
				concat('%',#{condition.peopleCode},'%')
			</if>
			<if test=" condition.peopleName != null and condition.peopleName != '' ">
				and p.name LIKE concat('%',#{condition.peopleName},'%')
			</if>
		</where>
	</select>

	<select id="findPeopleRetireSalaryPageCondition" resultMap="peopleRetireSalaryVoResultMap" parameterType="PageInfo">
	SELECT
		t.id,
		t.people_code,
		p.name as people_name,
		p.retire_job_name as retire_job_name,
		p.retire_job_level_id as retire_job_level_id,
		t.base_salary,
		t.rank_id,
		t.extra_allowance,
		t.rent_allowance,
		t.retire_allowance,
		t.retire_fee_increase,
		t.food_allowance,
		t.health_allowance,
		t.medicare_fee,
		t.property_allowance,
		t.heating_fee,
		t.handicap_allowance,
		t.gross_income,
		t.expense,
		t.rent_fee,
		t.net_income,
		t.pay_date
		FROM people_retire_salary t
		LEFT JOIN people_retire p
		ON t.people_code = p.code
		<where>
			<if test=" condition.peopleCode != null and condition.peopleCode != ''">
				and t.people_code LIKE
				concat('%',#{condition.peopleCode},'%')
			</if>
			<if test=" condition.peopleName != null and condition.peopleName != '' ">
				and p.name LIKE concat('%',#{condition.peopleName},'%')
			</if>
		</where>
		ORDER BY
		t.pay_date desc
		LIMIT #{from}, #{size}
	</select>

	<select id="findPeopleRetireSalaryVoListByCode" resultMap="peopleRetireSalaryVoResultMap" parameterType="java.lang.String">
		SELECT
			t.id,
			t.people_code,
			p.name as people_name,
			t.base_salary,
			t.rank_id,
			t.extra_allowance,
			t.rent_allowance,
			t.retire_allowance,
			t.retire_fee_increase,
			t.food_allowance,
			t.health_allowance,
			t.medicare_fee,
			t.property_allowance,
			t.heating_fee,
			t.handicap_allowance,
			t.gross_income,
			t.expense,
			t.rent_fee,
			t.net_income,
			t.pay_date
		FROM people_retire_salary t
		LEFT JOIN people_retire p
		ON t.people_code = p.code
		where t.people_code = #{peopleCode}
	</select>
</mapper>