<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangzhixuan.mapper.PeopleDeathMapper">
    <resultMap id="BaseResultMap" type="com.wangzhixuan.model.PeopleDeath">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="national_id" property="national" jdbcType="INTEGER"/>
        <result column="birthday" property="birthday" jdbcType="DATE" />
        <result column="school_date" property="school_date" jdbcType="DATE"/>
        <result column="job_name" property="jobName" jdbcType="VARCHAR" />
        <result column="job_id" property="job_level_id" jdbcType="INTEGER" />
        <result column="department_id" property="department" jdbcType="INTEGER" />
        <result column="death_date" property="death_date" jdbcType="DATE" />
        <result column="death_reason" property="death_reason" jdbcType="VARCHAR" />
        <result column="comment" property="comment" jdbcType="VARCHAR" />
        <result column="photo" property="photo" jdbcType="VARCHAR" />
        <result column="funeral_fee" property="funeralFee" jdbcType="DECIMAL"/>
        <result column="death_fee"   property="deathFee"   jdbcType="DECIMAL"/>
    </resultMap>

    <resultMap id="peopleDeathVoResultMap" type="com.wangzhixuan.vo.PeopleDeathVo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="code" property="code" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="TINYINT"/>
        <result column="national_id" property="national" jdbcType="INTEGER"/>
        <result column="nationalName" property="nationalName" jdbcType="VARCHAR"/>
        <result column="birthday" property="birthday" jdbcType="DATE" />
        <result column="school_date" property="school_date" jdbcType="DATE"/>
        <result column="job_name" property="jobName" jdbcType="VARCHAR" />
        <result column="job_id" property="job_level_id" jdbcType="INTEGER" />
        <result column="job_level_name" property="job_level_name" jdbcType="VARCHAR" />
        <result column="department_id" property="department" jdbcType="INTEGER" />
        <result column="death_date" property="death_date" jdbcType="DATE" />
        <result column="death_reason" property="death_reason" jdbcType="VARCHAR" />
        <result column="comment" property="comment" jdbcType="VARCHAR" />
        <result column="photo" property="photo" jdbcType="VARCHAR" />
        <result column="funeral_fee" property="funeralFee" jdbcType="DECIMAL"/>
        <result column="death_fee"   property="deathFee"   jdbcType="DECIMAL"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, code, name, sex, national_id, birthday, school_date, job_name, job_id, department_id, death_date, death_reason, comment, photo, funeral_fee, death_fee
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from people_total
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findPeopleByCode" resultMap="BaseResultMap" parameterType="java.lang.String">
        SELECT
        <include refid="Base_Column_List"/>
        FROM people_total
        where code = #{code, jdbcType=VARCHAR}
    </select>

    <select id="findPeopleVoById" resultMap="peopleDeathVoResultMap" parameterType="java.lang.Integer">
        SELECT
            t.id,
            t.code,
            t.name,
            t.sex,
            t.national_id,
            s.name as nationalName,
            t.birthday,
            t.school_date,
            t.job_name,
            t.job_id,
            j.job_level as job_level_name,
            t.department_id,
            t.death_date,
            t.death_reason,
            t.comment,
            t.photo,
            t.funeral_fee,
            t.death_fee
        FROM
          people_total t
        LEFT JOIN
          dict_national s ON s.id = t.national_id
        LEFT JOIN
          job j ON j.id = t.job_id
        <where>
            t.id = #{id}
        </where>
    </select>

    <select id="findPeopleById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from people_total
        where id = #{id}
    </select>

    <select id="findPeoplePageCondition" resultMap="peopleDeathVoResultMap" parameterType="PageInfo">
        SELECT
        t.id,
        t.code,
        t.name,
        t.sex,
        t.national_id,
        s.name as nationalName,
        t.birthday,
        t.school_date,
        t.job_name,
        t.job_id,
        j.job_level as job_level_name,
        t.department_id,
        t.death_date,
        t.death_reason,
        t.comment,
        t.photo,
        t.funeral_fee,
        t.death_fee
        FROM
        people_total t
        LEFT JOIN dict_national s ON s.id = t.national_id
        LEFT JOIN job j ON j.id = t.job_id
        <where>
            <if test=" condition.code != null">
                and t.code = #{condition.code}
            </if>
            <if test=" condition.name != null and condition.name !=''">
                and t.name LIKE concat('%', #{condition.name},'%')
            </if>
            <if test=" condition.sex != null">
                and t.sex = #{condition.sex}
            </if>
            <if test=" condition.national != null">
                and t.national_id = #{condition.national}
            </if>
            <if test=" condition.birthdayMin != null and condition.birthdayMin != ''">
                <![CDATA[ and t.birthday >= #{condition.birthdayMin} ]]>
            </if>
            <if test=" condition.birthdayMax != null and condition.birthdayMax != ''">
                <![CDATA[ and t.birthday <= #{condition.birthdayMax} ]]>
            </if>
            <if test=" condition.school_dateMin != null and condition.school_dateMin != ''">
                <![CDATA[ and t.school_date >= #{condition.school_dateMin} ]]>
            </if>
            <if test=" condition.school_dateMax != null and condition.school_dateMax != ''">
                <![CDATA[ and t.school_date <= #{condition.school_dateMax} ]]>
            </if>
            <if test=" condition.jobName != null and condition.jobName != ''">
                and t.job_name LIKE concat('%',#{condition.jobName},'%')
            </if>
            <if test=" condition.jobe_level_id != null">
                and t.job_id = #{condition.jobe_level_id}
            </if>
            <if test=" condition.department != null">
                and t.department_id = #{condition.department}
            </if>
            <if test=" condition.death_dateMin != null and condition.death_dateMin != ''">
                <![CDATA[ and t.death_date >= #{condition.death_dateMin} ]]>
            </if>
            <if test=" condition.death_dateMax != null and condition.death_dateMax != ''">
                <![CDATA[ and t.death_date <= #{condition.death_dateMax} ]]>
            </if>
            <if test=" condition.death_reason != null and condition.death_reason != ''">
                and t.death_reason LIKE concat('%',#{condition.death_reason},'%')
            </if>
            <if test=" condition.comment != null and condition.comment != ''">
                and t.comment LIKE concat('%',#{condition.comment},'%')
            </if>
            <if test="condition.status != null">
                and t.status = #{condition.status}
            </if>
        </where>
        LIMIT #{from}, #{size}
    </select>

    <select id="findPeoplePageCount" resultType="java.lang.Integer" parameterType="PageInfo">
        select count(*) count
        from people_total t
        <where>
            <if test=" condition.code != null">
                and t.code = #{condition.code}
            </if>
            <if test=" condition.name != null and condition.name !=''">
                and t.name LIKE concat('%', #{condition.name},'%')
            </if>
            <if test=" condition.sex != null">
                and t.sex = #{condition.sex}
            </if>
            <if test=" condition.national != null">
                and t.national_id = #{condition.national}
            </if>
            <if test=" condition.birthdayMin != null and condition.birthdayMin != ''">
                <![CDATA[ and t.birthday >= #{condition.birthdayMin} ]]>
            </if>
            <if test=" condition.birthdayMax != null and condition.birthdayMax != ''">
                <![CDATA[ and t.birthday <= #{condition.birthdayMax} ]]>
            </if>
            <if test=" condition.school_dateMin != null and condition.school_dateMin != ''">
                <![CDATA[ and t.school_date >= #{condition.school_dateMin} ]]>
            </if>
            <if test=" condition.school_dateMax != null and condition.school_dateMax != ''">
                <![CDATA[ and t.school_date <= #{condition.school_dateMax} ]]>
            </if>
            <if test=" condition.jobName != null and condition.jobName != ''">
                and t.job_name LIKE concat('%',#{condition.jobName},'%')
            </if>
            <if test=" condition.jobe_level_id != null">
                and t.job_id = #{condition.jobe_level_id}
            </if>
            <if test=" condition.department != null">
                and t.department_id = #{condition.department}
            </if>
            <if test=" condition.death_dateMin != null and condition.death_dateMin != ''">
                <![CDATA[ and t.death_date >= #{condition.death_dateMin} ]]>
            </if>
            <if test=" condition.death_dateMax != null and condition.death_dateMax != ''">
                <![CDATA[ and t.death_date <= #{condition.death_dateMax} ]]>
            </if>
            <if test=" condition.death_reason != null and condition.death_reason != ''">
                and t.death_reason LIKE concat('%',#{condition.death_reason},'%')
            </if>
            <if test=" condition.comment != null and condition.comment != ''">
                and t.comment LIKE concat('%',#{condition.comment},'%')
            </if>
            <if test="condition.status != null">
                and t.status = #{condition.status}
            </if>
        </where>
    </select>

    <delete id="deleteById" parameterType="java.lang.Integer">
        delete from people_total
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <delete id="batchDeleteByIds" parameterType="java.util.ArrayList">
        delete from people_total
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <insert id="insert" parameterType="com.wangzhixuan.model.PeopleDeath">
        <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into people_total (
          code, name, sex, national_id, birthday, school_date, job_name, job_id, department_id, death_date, death_reason, comment, photo, status, funeral_fee, death_fee)
        values (
        #{code,     jdbcType=VARCHAR},
        #{name,     jdbcType=VARCHAR},
        #{sex,      jdbcType=TINYINT},
        #{national, jdbcType=INTEGER},
        #{birthday, jdbcType=DATE},
        #{school_date,  jdbcType=DATE},
        #{jobName,      jdbcType=VARCHAR},
        #{job_level_id, jdbcType=INTEGER},
        #{department,   jdbcType=INTEGER},
        #{death_date,   jdbcType=DATE},
        #{death_reason, jdbcType=VARCHAR},
        #{comment,      jdbcType=VARCHAR},
        #{photo,        jdbcType=VARCHAR},
        2,
        #{funeralFee,  jdbcType=DECIMAL},
        #{deathFee,    jdbcType=DECIMAL}
        )
    </insert>
    <insert id="insertByImport" parameterType="java.util.List">
        insert into people_total (
          code, name, sex, national_id, birthday, school_date, job_name, job_id, department_id, death_date, death_reason, comment, photo, status, funeral_fee, death_fee)
        values
        <foreach item="item" index="index" collection="list" separator=",">
            (
                #{item.code,     jdbcType=VARCHAR},
                #{item.name,     jdbcType=VARCHAR},
                #{item.sex,      jdbcType=TINYINT},
                #{item.national, jdbcType=INTEGER},
                #{item.birthday, jdbcType=DATE},
                #{item.school_date,  jdbcType=DATE},
                #{item.jobName,      jdbcType=VARCHAR},
                #{item.job_level_id, jdbcType=INTEGER},
                #{item.department,   jdbcType=INTEGER},
                #{item.death_date,   jdbcType=DATE},
                #{item.death_reason, jdbcType=VARCHAR},
                #{item.comment,      jdbcType=VARCHAR},
                #{item.photo,        jdbcType=VARCHAR},
                2,
                #{item.funeralFee, jdbcType=DECIMAL},
                #{item.deathFee,   jdbcType=DECIMAL}
            )
        </foreach>
    </insert>
    <update id="updatePeople" parameterType="com.wangzhixuan.model.PeopleDeath">
        update people_total
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test=" name != null">
                name = #{name, jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=TINYINT},
            </if>
            <if test="national != null">
                national_id = #{national,jdbcType=INTEGER},
            </if>
            <if test="school_date != null">
                school_date = #{school_date,jdbcType=DATE},
            </if>
            <if test="jobName != null">
                job_name = #{jobName,jdbcType=VARCHAR},
            </if>
            <if test="job_level_id != null">
                job_id = #{job_level_id, jdbcType=INTEGER},
            </if>
            <if test="department != null">
                department_id = #{department,jdbcType=VARCHAR},
            </if>
            <if test="death_date != null">
                death_date = #{death_date, jdbcType=DATE},
            </if>
            <if test="death_reason != null">
                death_reason = #{death_reason,jdbcType=VARCHAR},
            </if>
            <if test="comment != null">
                comment = #{comment, jdbcType=VARCHAR},
            </if>
            <if test="photo != null">
                photo = #{photo, jdbcType=VARCHAR},
            </if>
            <if test="funeralFee != null">
                funeral_fee = #{funeralFee, jdbcType=DECIMAL},
            </if>
            <if test="deathFee != null">
                death_fee = #{deathFee,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectPeopleByIds" resultMap="BaseResultMap" parameterType="java.util.ArrayList">
        select
          t.id,t.code,t.name, t.sex,t.national_id,t.birthday,t.school_date,t.job_name,t.job_id,t.department_id,t.death_date,t.death_reason,t.comment,t.photo,
          t.funeral_fee, t.death_fee
        from people_death t
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="selectPeopleVoByIds" resultMap="peopleDeathVoResultMap" parameterType="java.util.ArrayList">
        select
            t.id,
            t.code,
            t.name,
            t.sex,
            t.national_id,
            s.name as nationalName,
            t.birthday,
            t.school_date,t.job_name,t.job_id,j.job_level as job_level_name,
            t.department_id,t.death_date,t.death_reason,t.comment,t.photo,
            t.funeral_fee,
            t.death_fee
        from people_total t
        left join
          dict_national s ON s.id = t.national_id
        left join
          job j ON j.id = t.job_id
        where t.id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>