<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangzhixuan.mapper.PeopleJobMapper">
    <resultMap id="BaseResultMap" type="com.wangzhixuan.model.PeopleJob">
        <id     column="id"             property="id" jdbcType="BIGINT"/>
        <result column="job_category"   property="jobCategory" jdbcType="VARCHAR"/>
        <result column="job_level"      property="jobLevel" jdbcType="VARCHAR"/>
        <result column="salary"         property="salary" jdbcType="DECIMAL"/>
    </resultMap>

    <resultMap id="peopleJobVoResultMap" type="com.wangzhixuan.vo.PeopleJobVo">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="job_category" property="jobCategory" jdbcType="VARCHAR" />
        <result column="job_level" property="jobLevel" jdbcType="VARCHAR" />
        <result column="salary" property="salary" jdbcType="DECIMAL" />
    </resultMap>

    <sql id="Base_Column_List">,
        id, job_category, job_level, salary
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from job
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findPeopleJobVoById" resultMap="peopleJobVoResultMap" parameterType="java.lang.Long">
        SELECT
        t.id,
        t.job_category,
        t.job_level,
        t.salary
        FROM
        job t
        <where>
            t.id = #{id}
        </where>
    </select>

    <select id="findPeopleJobById" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        id, job_category, job_level, salary
        from job
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="findPeopleJobPageCondition" resultMap="peopleJobVoResultMap" parameterType="PageInfo">
        SELECT
        t.id,
        t.job_category,
        t.job_level,
        t.salary
        FROM
        job t
        <where>
            <if test=" condition.jobCategory != null ">
                and t.job_category LIKE concat('%',#{condition.jobCategory},'%')
            </if>
            <if test=" condition.jobLevel != null and condition.jobLevel != '' ">
                and t.job_level LIKE concat('%',#{condition.jobLevel},'%')
            </if>
        </where>
        LIMIT #{from}, #{size}
    </select>

    <select id="findPeopleJobPageCount" resultType="java.lang.Integer" parameterType="PageInfo">
        select count(*) count
        from job t
        <where>
            <if test=" condition.jobCategory != null ">
                and t.job_category LIKE concat('%',#{condition.jobCategory},'%')
            </if>
            <if test=" condition.jobLevel != null and condition.jobLevel != '' ">
                and t.job_level LIKE concat('%',#{condition.jobLevel},'%')
            </if>
        </where>
    </select>

    <delete id="deletePeopleJobById" parameterType="java.lang.Long">
        delete from job
        where id = #{id,jdbcType=BIGINT}
    </delete>


    <delete id="batchDeleteByIds" parameterType="java.util.ArrayList">
        delete from job
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </delete>


    <insert id="insert" parameterType="com.wangzhixuan.model.PeopleJob">
        <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into job (job_category, job_level, salary)
        values (
        #{jobCategory,jdbcType=VARCHAR},
        #{jobLevel,jdbcType=VARCHAR},
        #{salary,jdbcType=DECIMAL}
        )
    </insert>

    <update id="updatePeopleJob" parameterType="com.wangzhixuan.model.PeopleJob">
        update job
        <set>
            <if test="jobCategory != null">
                job_category = #{jobCategory,jdbcType=VARCHAR},
            </if>
            <if test="jobLevel != null">
                job_level = #{jobLevel,jdbcType=VARCHAR},
            </if>
            <if test="salary != null">
                salary = #{salary,jdbcType=DECIMAL},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectPeopleJobByIds" resultMap="BaseResultMap" parameterType="java.util.ArrayList">
        select
        t.id,
        t.job_category,
        t.job_level,
        t.salary
        from job t
        where id in
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


</mapper>
